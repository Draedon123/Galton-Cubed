(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();class G{samples;maxSamples;constructor(e){this.samples=[],this.maxSamples=e}get average(){return this.samples.reduce((e,t)=>e+t,0)/this.samples.length}addSample(e){this.samples.length===this.maxSamples&&this.samples.shift(),this.samples.push(e)}reset(){this.samples.splice(0,this.samples.length)}}class M{static modifiedDevices=new Set;canTimestamp;querySet;resolveBuffer;resultBuffer;rollingAverage;onUpdate;constructor(e,t=()=>{}){if(this.canTimestamp=e.features.has("timestamp-query"),this.onUpdate=t,this.rollingAverage=new G(50),this.canTimestamp&&(this.querySet=e.createQuerySet({label:"GPUTimer Query Set",type:"timestamp",count:2}),this.resolveBuffer=e.createBuffer({label:"GPUTimer Resolve Buffer",size:this.querySet.count*BigInt64Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=e.createBuffer({label:"GPUTimer Result Buffer",size:this.resolveBuffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})),!M.modifiedDevices.has(e)){const n=e.queue.submit.bind(e.queue);e.queue.submit=s=>{n(s),!(!this.canTimestamp||this.resultBuffer.mapState!=="unmapped")&&this.resultBuffer.mapAsync(GPUMapMode.READ).then(()=>{const o=new BigInt64Array(this.resultBuffer.getMappedRange());this.rollingAverage.addSample(Number(o[1]-o[0])),this.resultBuffer.unmap(),this.onUpdate(this.rollingAverage.average)})},M.modifiedDevices.add(e)}}get time(){return this.rollingAverage.average}beginComputePass(e,t){const n={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},s=e.beginComputePass({...t,...this.canTimestamp?{timestampWrites:n}:void 0}),o=s.end.bind(s);return s.end=()=>{o(),this.canTimestamp&&(e.resolveQuerySet(this.querySet,0,this.querySet.count,this.resolveBuffer,0),this.resultBuffer.mapState==="unmapped"&&e.copyBufferToBuffer(this.resolveBuffer,this.resultBuffer))},s}beginRenderPass(e,t){const n={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},s=e.beginRenderPass({...t,...this.canTimestamp?{timestampWrites:n}:void 0}),o=s.end.bind(s);return s.end=()=>{o(),this.canTimestamp&&(e.resolveQuerySet(this.querySet,0,this.querySet.count,this.resolveBuffer,0),this.resultBuffer.mapState==="unmapped"&&e.copyBufferToBuffer(this.resolveBuffer,this.resultBuffer))},s}reset(){this.rollingAverage.reset()}}class x{components;constructor(){this.components=new Float32Array(16),this.components[0]=1,this.components[5]=1,this.components[10]=1,this.components[15]=1}static multiplyMatrices(e,t,n=new x){const s=e.components[0],o=e.components[1],i=e.components[2],p=e.components[3],f=e.components[4],r=e.components[5],d=e.components[6],v=e.components[7],g=e.components[8],y=e.components[9],w=e.components[10],a=e.components[11],B=e.components[12],b=e.components[13],T=e.components[14],E=e.components[15];let m=t.components[0],l=t.components[1],u=t.components[2],h=t.components[3];return n.components[0]=m*s+l*f+u*g+h*B,n.components[1]=m*o+l*r+u*y+h*b,n.components[2]=m*i+l*d+u*w+h*T,n.components[3]=m*p+l*v+u*a+h*E,m=t.components[4],l=t.components[5],u=t.components[6],h=t.components[7],n.components[4]=m*s+l*f+u*g+h*B,n.components[5]=m*o+l*r+u*y+h*b,n.components[6]=m*i+l*d+u*w+h*T,n.components[7]=m*p+l*v+u*a+h*E,m=t.components[8],l=t.components[9],u=t.components[10],h=t.components[11],n.components[8]=m*s+l*f+u*g+h*B,n.components[9]=m*o+l*r+u*y+h*b,n.components[10]=m*i+l*d+u*w+h*T,n.components[11]=m*p+l*v+u*a+h*E,m=t.components[12],l=t.components[13],u=t.components[14],h=t.components[15],n.components[12]=m*s+l*f+u*g+h*B,n.components[13]=m*o+l*r+u*y+h*b,n.components[14]=m*i+l*d+u*w+h*T,n.components[15]=m*p+l*v+u*a+h*E,n}static perspective(e,t,n,s){const o=new x,i=1/Math.tan(e/2);if(o.components[0]=i/t,o.components[5]=i,o.components[11]=-1,o.components[15]=0,s!==1/0){const p=1/(n-s);o.components[10]=s*p,o.components[14]=s*n*p}else o.components[10]=-1,o.components[14]=-n;return o}static lookAt(e,t,n){const s=new x,o=1e-6;let i,p,f,r,d,v,g,y,w,a;const B=e.x,b=e.y,T=e.z,E=n.x,m=n.y,l=n.z,u=t.x,h=t.y,C=t.z;return Math.abs(B-u)<o&&Math.abs(b-h)<o&&Math.abs(T-C)<o?(console.warn("Look At too close to Position"),new x):(g=B-u,y=b-h,w=T-C,a=1/Math.sqrt(g*g+y*y+w*w),g*=a,y*=a,w*=a,i=m*w-l*y,p=l*g-E*w,f=E*y-m*g,a=Math.sqrt(i*i+p*p+f*f),a?(a=1/a,i*=a,p*=a,f*=a):(i=0,p=0,f=0),r=y*f-w*p,d=w*i-g*f,v=g*p-y*i,a=Math.sqrt(r*r+d*d+v*v),a?(a=1/a,r*=a,d*=a,v*=a):(r=0,d=0,v=0),s.components[0]=i,s.components[1]=r,s.components[2]=g,s.components[3]=0,s.components[4]=p,s.components[5]=d,s.components[6]=y,s.components[7]=0,s.components[8]=f,s.components[9]=v,s.components[10]=w,s.components[11]=0,s.components[12]=-(i*B+p*b+f*T),s.components[13]=-(r*B+d*b+v*T),s.components[14]=-(g*B+y*b+w*T),s.components[15]=1,s)}copyFrom(e){this.components[0]=e.components[0],this.components[1]=e.components[1],this.components[2]=e.components[2],this.components[3]=e.components[3],this.components[4]=e.components[4],this.components[5]=e.components[5],this.components[6]=e.components[6],this.components[7]=e.components[7],this.components[8]=e.components[8],this.components[9]=e.components[9],this.components[10]=e.components[10],this.components[11]=e.components[11],this.components[12]=e.components[12],this.components[13]=e.components[13],this.components[14]=e.components[14],this.components[15]=e.components[15]}}class I extends x{buffer;device;constructor(e,t,n=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST){super(),this.device=e,this.buffer=e.createBuffer({label:t,usage:n,size:64}),this.device=e}writeBuffer(){this.device.queue.writeBuffer(this.buffer,0,this.components.buffer)}}function L(c){return`/Galton-Cubed/${c}`}const q=Math.PI/180;function U(c){return c*q}const D=180/Math.PI;function F(c){return c*D}class P{components;constructor(e=0,t=0,n=0){this.components=new Float32Array(3),this.components[0]=e,this.components[1]=t,this.components[2]=n}static add(e,t){return new P(e.components[0]+t.components[0],e.components[1]+t.components[1],e.components[2]+t.components[2])}static subtract(e,t){return new P(e.components[0]-t.components[0],e.components[1]-t.components[1],e.components[2]-t.components[2])}normalise(){const e=this.magnitude;if(e<1e-8)return console.error("Magnitude of vector too close to 0 to normalise"),this;const t=1/e;return this.components[0]*=t,this.components[1]*=t,this.components[2]*=t,this}get magnitude(){return Math.hypot(this.components[0],this.components[1],this.components[2])}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}set x(e){this.components[0]=e}set y(e){this.components[1]=e}set z(e){this.components[2]=e}}class O{position;lookAt;aspectRatio;near;far;fovRadians;constructor(e={}){this.position=e.position??new P,this.lookAt=e.lookAt??new P(0,0,-1),this.aspectRatio=e.aspectRatio??16/9,this.near=e.near??.1,this.far=e.far??1e3,this.fovRadians=U(e.fovDegrees??60)}get fovDegrees(){return F(this.fovRadians)}set fovDegrees(e){this.fovRadians=U(e)}getPerspectiveMatrix(){return x.perspective(this.fovRadians,this.aspectRatio,this.near,this.far)}getViewMatrix(){const e=P.subtract(this.lookAt,this.position).normalise(),t=new P(0,1,0);return x.lookAt(this.position,P.add(this.position,e),t)}getPerspectiveViewMatrix(){return x.multiplyMatrices(this.getPerspectiveMatrix(),this.getViewMatrix())}}class S{shader;constructor(e,t,n){this.shader=e.createShaderModule({label:n,code:t})}static async fetch(e,t,n,s=o=>o){const o=await(await fetch(t)).text(),i=await S.preprocess(t,o);return new S(e,s(i),n)}static async preprocess(e,t){return S.resolveImports(e,t)}static async resolveImports(e,t,n=[]){const s=/#!import.*\s/g,o=e.split("/"),i=o.slice(0,o.length-1).join("/")+"/",p=t.match(s)?.map(r=>r.replaceAll(/(#!import)|\s/g,"")).filter(r=>!n.includes(r)).map(r=>i+r+".wgsl")??[];return((await Promise.all(p.map(async r=>{const d=await fetch(r);if(!d.ok)return"";const v=await d.text();return S.resolveImports(r,v,n)}))).join("")+t).replaceAll(s,"")}}const A=new Float32Array([.5,.5,.5,.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,.5,.5,.5,-.5,-.5,.5]);class R{canvas;camera;settings;device;ctx;canvasFormat;gpuTimer;initialised;renderBindGroup;renderPipeline;cubeVertexBuffer;cubeBufferLayout;depthTexture;perspectiveViewMatrix;constructor(e,t,n){const s=e.getContext("webgpu");if(s===null)throw new Error("Could not create WebGPU Canvas Context");this.settings={timing:t.timing},this.canvas=e,this.device=n,this.ctx=s,this.canvasFormat="rgba8unorm",this.camera=new O(t.cameraOptions),this.perspectiveViewMatrix=new I(n,"Perspective View Matrix"),this.gpuTimer=new M(this.device,o=>{const i=o/1e3,p=o/1e6,f=o/1e9,r=p>1,d=(r?p:i).toFixed(2),v=r?"ms":"Î¼s";if(this.settings.timing?.frameTimeElement!==void 0&&(this.settings.timing.frameTimeElement.textContent=d+v),this.settings.timing?.fpsElement!==void 0){const g=1/f;this.settings.timing.fpsElement.textContent=g.toFixed(2)}}),this.gpuTimer.canTimestamp||(this.settings.timing?.frameTimeElement!==void 0&&(this.settings.timing.frameTimeElement.textContent="[Not supported by browser]"),this.settings.timing?.fpsElement!==void 0&&(this.settings.timing.fpsElement.textContent="[Not supported by browser]")),this.initialised=!1}async initialise(){this.initialised||(await this.initialiseRendering(),new ResizeObserver(e=>{const t=e[0],n=t.devicePixelContentBoxSize[0].inlineSize,s=t.devicePixelContentBoxSize[0].blockSize;this.canvas.width=n,this.canvas.height=s,this.camera.aspectRatio=n/s,this.depthTexture?.destroy(),this.depthTexture=this.createDepthTexture(),this.gpuTimer.reset(),this.render()}).observe(this.canvas),this.initialised=!0)}createDepthTexture(){return this.device.createTexture({label:"Renderer Depth Texture",size:[this.canvas.width,this.canvas.height],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})}async initialiseRendering(){this.ctx.configure({device:this.device,format:this.canvasFormat});const e=await S.fetch(this.device,L("shaders/render.wgsl"));this.depthTexture=this.createDepthTexture(),this.cubeBufferLayout={arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:0}]},this.cubeVertexBuffer=this.device.createBuffer({label:"Cube Buffer",size:1*A.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),this.device.queue.writeBuffer(this.cubeVertexBuffer,0,A);const t=this.device.createBindGroupLayout({label:"Cube Bind Group Layout",entries:[{binding:0,buffer:{type:"uniform"},visibility:GPUShaderStage.VERTEX}]});this.renderBindGroup=this.device.createBindGroup({label:"Render Bing Group",layout:t,entries:[{binding:0,resource:{buffer:this.perspectiveViewMatrix.buffer}}]});const n=this.device.createPipelineLayout({label:"Renderer Render Pipeline Layout",bindGroupLayouts:[t]});this.renderPipeline=this.device.createRenderPipeline({label:"Renderer Render Pipeline",layout:n,vertex:{module:e.shader,buffers:[this.cubeBufferLayout]},fragment:{module:e.shader,targets:[{format:this.canvasFormat}]},primitive:{cullMode:"front"},depthStencil:{format:"depth24plus",depthCompare:"less",depthWriteEnabled:!0}})}render(){this.perspectiveViewMatrix.copyFrom(this.camera.getPerspectiveViewMatrix()),this.perspectiveViewMatrix.writeBuffer(),this.renderToCanvas()}renderToCanvas(){const e=this.device.createCommandEncoder(),t=this.gpuTimer.beginRenderPass(e,{colorAttachments:[{view:this.ctx.getCurrentTexture().createView(),loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:this.depthTexture.createView(),depthLoadOp:"clear",depthStoreOp:"store",depthClearValue:1}});t.setVertexBuffer(0,this.cubeVertexBuffer),t.setBindGroup(0,this.renderBindGroup),t.setPipeline(this.renderPipeline),t.draw(A.length/3),t.end(),this.device.queue.submit([e.finish()])}static async create(e,t={}){if(!("gpu"in navigator))throw new Error("WebGPU not supported");const n=await navigator.gpu.requestAdapter();if(n===null)throw new Error("Could not find suitable GPU Adapter. Maybe your browser doesn't support WebGPU?");const s=await n.requestDevice({requiredFeatures:R.requestFeatures(n,"timestamp-query")});if(s===null)throw new Error("Could not find suitable GPU Device. Maybe your browser doesn't support WebGPU?");return new R(e,t,s)}static requestFeatures(e,...t){return t.filter(n=>{const s=e.features.has(n);return s||console.warn(`GPU Feature ${n} not supported`),s})}}class V{settings;callbacks=[];frameID;lastFrameTime;totalTime;constructor(e={}){this.frameID=null,this.lastFrameTime=0,this.totalTime=0,this.callbacks=[],this.settings={wormholeThreshold:e.wormholeThreshold??500}}start(){this.running||(this.totalTime=0,this.lastFrameTime=-1,this.frameID=requestAnimationFrame(this.tick.bind(this)))}stop(){this.running&&(cancelAnimationFrame(this.frameID),this.frameID=null)}toggle(){this.running?this.stop():this.start()}addCallback(e){this.callbacks.push(e)}tick(e){this.lastFrameTime<0&&(this.lastFrameTime=e);const t=e-this.lastFrameTime,n=this.totalTime+t;if(t<this.settings.wormholeThreshold){const s={deltaTime:t,totalTime:n};for(const o of this.callbacks)o(s);this.totalTime=n}this.lastFrameTime=e,this.frameID=requestAnimationFrame(this.tick.bind(this))}get running(){return this.frameID!==null}}function z(c){k()}function k(){const c=document.getElementById("chevron"),e=document.getElementById("content");if(c===null)throw new Error("Could not find chevron element");if(e===null)throw new Error("Could not find info panel");c.addEventListener("click",()=>{c.classList.toggle("collapsed"),e.classList.toggle("collapsed")})}async function N(){const c=document.getElementById("main"),e=document.getElementById("frameTime"),t=document.getElementById("fps"),n=await R.create(c,{timing:{frameTimeElement:e,fpsElement:t}});await n.initialise(),n.camera.position=new P(5,5,5),n.camera.fovDegrees=60,n.camera.lookAt=new P(0,0,0),z();const s=new V;s.addCallback(()=>{n.render()}),s.start(),c.addEventListener("click",()=>{c.requestPointerLock()})}N().catch(c=>{const e=c instanceof Error?c.message:JSON.stringify(c),t=document.getElementById("message");t.classList.add("error"),t.textContent=e;const n=document.getElementById("chevron"),s=document.getElementById("content");n?.classList.add("collapsed"),s?.classList.add("collapsed"),console.trace(),console.error(e)});

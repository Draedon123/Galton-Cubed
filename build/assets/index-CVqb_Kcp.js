(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();class F{samples;maxSamples;constructor(e){this.samples=[],this.maxSamples=e}get average(){return this.samples.reduce((e,t)=>e+t,0)/this.samples.length}addSample(e){this.samples.length===this.maxSamples&&this.samples.shift(),this.samples.push(e)}reset(){this.samples.splice(0,this.samples.length)}}class L{canTimestamp;querySet;resolveBuffer;resultBuffer;rollingAverage;onUpdate;constructor(e,t=()=>{}){this.canTimestamp=e.features.has("timestamp-query"),this.onUpdate=t,this.rollingAverage=new F(50),this.canTimestamp&&(this.querySet=e.createQuerySet({label:"GPUTimer Query Set",type:"timestamp",count:2}),this.resolveBuffer=e.createBuffer({label:"GPUTimer Resolve Buffer",size:this.querySet.count*8,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=e.createBuffer({label:"GPUTimer Result Buffer",size:this.resolveBuffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}));const s=e.queue.submit.bind(e.queue);e.queue.submit=i=>{s(i),this.canTimestamp&&e.queue.onSubmittedWorkDone().then(()=>{this.resultBuffer.mapState==="unmapped"&&this.resultBuffer.mapAsync(GPUMapMode.READ).then(()=>{const n=new BigInt64Array(this.resultBuffer.getMappedRange());this.rollingAverage.addSample(Number(n[1]-n[0])),this.resultBuffer.unmap(),this.onUpdate(this.rollingAverage.average)})})}}get time(){return this.rollingAverage.average}beginPass(e,t,s){const i={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},n=e[t==="render"?"beginRenderPass":"beginComputePass"]({...s,...this.canTimestamp?{timestampWrites:i}:void 0}),r=n.end.bind(n);return n.end=()=>{r(),this.canTimestamp&&(e.resolveQuerySet(this.querySet,0,this.querySet.count,this.resolveBuffer,0),this.resultBuffer.mapState==="unmapped"&&e.copyBufferToBuffer(this.resolveBuffer,this.resultBuffer))},n}beginComputePass(e,t){return this.beginPass(e,"compute",t)}beginRenderPass(e,t){return this.beginPass(e,"render",t)}reset(){this.rollingAverage.reset()}}class S{components;constructor(){this.components=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}static multiplyMatrices(e,t,s=new S){const i=e.components[0],n=e.components[1],r=e.components[2],a=e.components[3],l=e.components[4],h=e.components[5],d=e.components[6],m=e.components[7],u=e.components[8],f=e.components[9],B=e.components[10],p=e.components[11],x=e.components[12],P=e.components[13],v=e.components[14],T=e.components[15];let g=t.components[0],b=t.components[1],w=t.components[2],y=t.components[3];return s.components[0]=g*i+b*l+w*u+y*x,s.components[1]=g*n+b*h+w*f+y*P,s.components[2]=g*r+b*d+w*B+y*v,s.components[3]=g*a+b*m+w*p+y*T,g=t.components[4],b=t.components[5],w=t.components[6],y=t.components[7],s.components[4]=g*i+b*l+w*u+y*x,s.components[5]=g*n+b*h+w*f+y*P,s.components[6]=g*r+b*d+w*B+y*v,s.components[7]=g*a+b*m+w*p+y*T,g=t.components[8],b=t.components[9],w=t.components[10],y=t.components[11],s.components[8]=g*i+b*l+w*u+y*x,s.components[9]=g*n+b*h+w*f+y*P,s.components[10]=g*r+b*d+w*B+y*v,s.components[11]=g*a+b*m+w*p+y*T,g=t.components[12],b=t.components[13],w=t.components[14],y=t.components[15],s.components[12]=g*i+b*l+w*u+y*x,s.components[13]=g*n+b*h+w*f+y*P,s.components[14]=g*r+b*d+w*B+y*v,s.components[15]=g*a+b*m+w*p+y*T,s}static perspective(e,t,s,i){const n=new S,r=1/Math.tan(e/2);if(n.components[0]=r/t,n.components[5]=r,n.components[11]=-1,n.components[15]=0,i!==1/0){const a=1/(s-i);n.components[10]=i*a,n.components[14]=i*s*a}else n.components[10]=-1,n.components[14]=-s;return n}static lookAt(e,t,s){const i=new S,n=1e-6;let r,a,l,h,d,m,u,f,B,p;const x=e.x,P=e.y,v=e.z,T=s.x,g=s.y,b=s.z,w=t.x,y=t.y,D=t.z;return Math.abs(x-w)<n&&Math.abs(P-y)<n&&Math.abs(v-D)<n?(console.warn("Look At too close to Position"),new S):(u=x-w,f=P-y,B=v-D,p=1/Math.sqrt(u*u+f*f+B*B),u*=p,f*=p,B*=p,r=g*B-b*f,a=b*u-T*B,l=T*f-g*u,p=Math.sqrt(r*r+a*a+l*l),p?(p=1/p,r*=p,a*=p,l*=p):(r=0,a=0,l=0),h=f*l-B*a,d=B*r-u*l,m=u*a-f*r,p=Math.sqrt(h*h+d*d+m*m),p?(p=1/p,h*=p,d*=p,m*=p):(h=0,d=0,m=0),i.components[0]=r,i.components[1]=h,i.components[2]=u,i.components[3]=0,i.components[4]=a,i.components[5]=d,i.components[6]=f,i.components[7]=0,i.components[8]=l,i.components[9]=m,i.components[10]=B,i.components[11]=0,i.components[12]=-(r*x+a*P+l*v),i.components[13]=-(h*x+d*P+m*v),i.components[14]=-(u*x+f*P+B*v),i.components[15]=1,i)}copyFrom(e){return this.components.set(e.components),this}}class z extends S{buffer;device;constructor(e,t,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST){super(),this.device=e,this.buffer=e.createBuffer({label:t,usage:s,size:64}),this.device=e}writeBuffer(){this.device.queue.writeBuffer(this.buffer,0,this.components.buffer)}}function A(c){return`/Galton-Cubed/${c}`}const I=Math.PI/180;function E(c){return c*I}const q=180/Math.PI;function j(c){return c*q}function V(c,e,t){return Math.max(Math.min(c,t),e)}class N{keybinds;keysDown;constructor(e){this.keysDown=new Set,this.keybinds=new Set(e)}addEventListeners(){document.addEventListener("keydown",this.onKeyDown.bind(this)),document.addEventListener("keyup",this.onKeyUp.bind(this))}isKeyDown(e){return this.keysDown.has(e)}onKeyDown(e){const t=e.code;this.keybinds.has(t)&&this.keysDown.add(t)}onKeyUp(e){const t=e.code;this.keysDown.delete(t)}}class o{components;constructor(e=0,t=0,s=0){this.components=new Float32Array([e,t,s])}static cross(e,t){const s=e.components[0],i=e.components[1],n=e.components[2],r=t.components[0],a=t.components[1],l=t.components[2];return new o(i*l-n*a,n*r-s*l,s*a-i*r)}static add(e,t){return new o(e.components[0]+t.components[0],e.components[1]+t.components[1],e.components[2]+t.components[2])}add(e){return this.components[0]+=e.components[0],this.components[1]+=e.components[1],this.components[2]+=e.components[2],this}static subtract(e,t){return new o(e.components[0]-t.components[0],e.components[1]-t.components[1],e.components[2]-t.components[2])}subtract(e){return this.components[0]-=e.components[0],this.components[1]-=e.components[1],this.components[2]-=e.components[2],this}static scale(e,t){return new o(e.components[0]*t,e.components[1]*t,e.components[2]*t)}scale(e){return this.components[0]*=e,this.components[1]*=e,this.components[2]*=e,this}static normalise(e){return o.clone(e).normalise()}normalise(){const e=this.magnitude;if(e<1e-8)return console.error("Magnitude of vector too close to 0 to normalise"),this;const t=1/e;return this.components[0]*=t,this.components[1]*=t,this.components[2]*=t,this}static clone(e){return new o(e.components[0],e.components[1],e.components[2])}get magnitude(){return Math.hypot(this.components[0],this.components[1],this.components[2])}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}set x(e){this.components[0]=e}set y(e){this.components[1]=e}set z(e){this.components[2]=e}}class Y{position;forward;aspectRatio;near;far;movementSpeed;mouseSensitivity;pitch;yaw;fovRadians;keyboardManager;keybinds;constructor(e={}){this.position=e.position??new o,this.forward=new o(0,0,-1),this.aspectRatio=e.aspectRatio??16/9,this.near=e.near??.1,this.far=e.far??1e3,this.fovRadians=E(e.fovDegrees??60),this.movementSpeed=e.movementSpeed??1,this.mouseSensitivity=e.mouseSensitivity??1,this.pitch=0,this.yaw=-90,this.keybinds={forwards:e.keybinds?.forwards??"KeyW",backwards:e.keybinds?.backwards??"KeyS",left:e.keybinds?.left??"KeyA",right:e.keybinds?.right??"KeyD",up:e.keybinds?.up??"Space",down:e.keybinds?.down??"ShiftLeft"},this.keyboardManager=new N(Object.values(this.keybinds)),this.addEventListeners()}checkKeyboardInputs(e){const t=this.movementSpeed*e;if(this.keyboardManager.isKeyDown(this.keybinds.forwards)){const s=o.clone(this.forward);s.y=0,s.normalise(),this.position.add(o.scale(s,t))}if(this.keyboardManager.isKeyDown(this.keybinds.backwards)){const s=o.clone(this.forward);s.y=0,s.normalise(),this.position.subtract(o.scale(s,t))}if(this.keyboardManager.isKeyDown(this.keybinds.left)){const s=o.clone(this.forward);s.y=0,s.normalise(),this.position.subtract(o.cross(s,new o(0,1,0)).normalise().scale(t))}if(this.keyboardManager.isKeyDown(this.keybinds.right)){const s=o.clone(this.forward);s.y=0,s.normalise(),this.position.add(o.cross(s,new o(0,1,0)).normalise().scale(t))}this.keyboardManager.isKeyDown(this.keybinds.up)&&(this.position.y+=t),this.keyboardManager.isKeyDown(this.keybinds.down)&&(this.position.y-=t)}addEventListeners(){this.keyboardManager.addEventListeners(),document.addEventListener("mousemove",e=>{const t=e.movementX*this.mouseSensitivity,s=-e.movementY*this.mouseSensitivity;this.yaw+=t,this.pitch=V(this.pitch+s,-89.9,89.9),this.updateForwardVector()})}get fovDegrees(){return j(this.fovRadians)}set fovDegrees(e){this.fovRadians=E(e)}getPerspectiveMatrix(){return S.perspective(this.fovRadians,this.aspectRatio,this.near,this.far)}getViewMatrix(){const e=new o(0,1,0);return S.lookAt(this.position,o.add(this.position,this.forward),e)}getPerspectiveViewMatrix(){return S.multiplyMatrices(this.getPerspectiveMatrix(),this.getViewMatrix())}updateForwardVector(){const e=E(this.yaw),t=E(this.pitch),s=Math.cos(e),i=Math.cos(t),n=Math.sin(e),r=Math.sin(t),a=new o(s*i,r,n*i).normalise();this.forward=a}}class U{shader;constructor(e,t,s){this.shader=e.createShaderModule({label:s,code:t})}static async fetch(e,t,s,i=n=>n){const n=await(await fetch(t)).text(),r=await U.preprocess(t,n);return new U(e,i(r),s)}static async preprocess(e,t){return U.resolveImports(e,t)}static async resolveImports(e,t,s=[]){const i=/#!import.*\s/g,n=e.split("/"),r=n.slice(0,n.length-1).join("/")+"/",a=t.match(i)?.map(h=>h.replaceAll(/(#!import)|\s/g,"")).filter(h=>!s.includes(h)).map(h=>r+h+".wgsl")??[];return((await Promise.all(a.map(async h=>{const d=await fetch(h);if(!d.ok)return"";const m=await d.text();return U.resolveImports(h,m,s)}))).join("")+t).replaceAll(i,"")}}class k{buffer;dataview;littleEndian;offset;constructor(e,t=!0,s=0){this.buffer=new ArrayBuffer(e),this.dataview=new DataView(this.buffer),this.littleEndian=t,this.offset=s}writeUint8(e){this.dataview.setUint8(this.offset,e),this.offset+=1}writeUint32(e){this.dataview.setUint32(this.offset,e,this.littleEndian),this.offset+=4}writeFloat32(e){this.dataview.setFloat32(this.offset,e,this.littleEndian),this.offset+=4}writeVec3f(e){this.writeFloat32(e.x),this.writeFloat32(e.y),this.writeFloat32(e.z)}writeMat4x4f(e){new Float32Array(this.buffer,this.offset,16).set(e.components),this.offset+=64}pad(e){this.offset+=e}}class R{mesh;scene;drawArgs;objects;initialised;device;constructor(e){this.initialised=!1,this.objects=[],this.mesh=e}initialise(e,t){this.initialised||(e.scenes.push(this),this.device=t,this.scene=e,this.mesh.initialise(t),this.drawArgs=t.createBuffer({label:"Draw Arguments",size:20,usage:GPUBufferUsage.INDIRECT|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),this.initialised=!0,this.updateBuffer(),this.updateDrawArgs())}updateBuffer(e=this.objects.length){if(!this.initialised)return;const t=new k(e*R.objectByteLength);for(let s=this.objects.length-e;s<this.objects.length;s++){const i=this.objects[s],n=i.calculateModelMatrix();t.writeMat4x4f(n),t.writeVec3f(i.colour),t.pad(4)}this.device.queue.writeBuffer(this.scene.sceneBuffer,this.sceneByteOffset+(this.objects.length-e)*R.objectByteLength,t.buffer)}addObjects(e,t=!0){const s=this.scene?.scenes.indexOf(this),i=this.scene?.maxObjectsPerScene[s];for(const n of e){if(this.objects.length>=i){console.warn(`Maximum number of objects reached (${i}). New objects not added`);break}this.objects.push(n)}t&&this.updateDrawArgs()}updateDrawArgs(e=this.mesh.indexCount,t=this.objectCount){this.initialised&&this.device.queue.writeBuffer(this.drawArgs,0,new Uint32Array([e,t]))}get objectCount(){return this.objects.length}get sceneByteOffset(){const e=this.scene.scenes.indexOf(this);return this.scene.scenes.reduce((t,s,i)=>i>=e?t:t+s.byteLength,0)}get maxObjects(){return this.scene.maxObjectsPerScene[this.scene.scenes.indexOf(this)]}get byteLength(){return this.maxObjects*R.objectByteLength}static get objectByteLength(){return 80}}class K{maxObjectsPerScene;maxScenes;scenes;sceneBuffer;initialised;constructor(e,t=128){this.maxObjectsPerScene=typeof t=="number"?new Array(e).fill(0).map(()=>t):Array.from({length:e},(i,n)=>t[n]??128),this.maxScenes=e,this.scenes=[];const s=this.scenes.push.bind(this.scenes);this.scenes.push=(...i)=>{for(const n of i){if(this.scenes.length>=this.maxScenes){console.warn("Maximum number of scenes reached. New scenes not added");break}s(n)}return this.scenes.length},this.initialised=!1}initialise(e){if(!this.initialised){this.sceneBuffer=e.createBuffer({label:"Scene Buffer",size:this.maxScenes*this.maxObjectsPerScene.reduce((t,s)=>t+s,0)*R.objectByteLength,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});for(const t of this.scenes)t.initialise(this,e),t.updateBuffer();this.initialised=!0}}}class M{canvas;camera;scenes;device;ctx;canvasFormat;gpuTimer;initialised;renderBindGroup;renderPipeline;depthTexture;board;parametersBuffer;perspectiveViewMatrix;constructor(e,t,s){const i=e.getContext("webgpu");if(i===null)throw new Error("Could not create WebGPU Canvas Context");this.canvas=e,this.device=s,this.ctx=i,this.canvasFormat="rgba8unorm",this.camera=new Y(t.cameraOptions),this.scenes=t.scene;const n=document.getElementById("renderFrameTime"),r=document.getElementById("fps");this.gpuTimer=new L(this.device,a=>{const l=a/1e3,h=a/1e6,d=a/1e9,m=h>1,u=(m?h:l).toFixed(2),f=m?"ms":"μs",B=1/d;n.textContent=u+f,r.textContent=B.toFixed(2)}),this.gpuTimer.canTimestamp||(n.textContent="[Not supported by browser]",r.textContent="[Not supported by browser]"),this.parametersBuffer=s.createBuffer({label:"Parameters Buffer",size:this.scenes.maxScenes*256,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this.perspectiveViewMatrix=new z(s,"Perspective View Matrix"),this.initialised=!1}async initialise(e){if(this.initialised)return;this.board=e,await this.initialiseRendering();const t=new k(this.scenes.maxScenes*256);for(let s=0;s<this.scenes.maxObjectsPerScene.length;s++){const i=this.scenes.maxObjectsPerScene[s-1]??0;t.writeUint32(i),t.pad(252)}this.device.queue.writeBuffer(this.parametersBuffer,0,t.buffer),new ResizeObserver(s=>{const i=s[0],n=i.devicePixelContentBoxSize[0].inlineSize,r=i.devicePixelContentBoxSize[0].blockSize;this.canvas.width=n,this.canvas.height=r,this.camera.aspectRatio=n/r,this.depthTexture?.destroy(),this.depthTexture=this.createDepthTexture(),this.render()}).observe(this.canvas),this.initialised=!0}createDepthTexture(){return this.device.createTexture({label:"Renderer Depth Texture",size:[this.canvas.width,this.canvas.height],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})}async initialiseRendering(){this.ctx.configure({device:this.device,format:this.canvasFormat});const e=await U.fetch(this.device,A("shaders/render.wgsl"));this.depthTexture=this.createDepthTexture();const t=this.device.createBindGroupLayout({label:"Render Bind Group Layout",entries:[{binding:0,buffer:{type:"uniform"},visibility:GPUShaderStage.VERTEX},{binding:1,buffer:{type:"read-only-storage"},visibility:GPUShaderStage.VERTEX},{binding:2,buffer:{type:"uniform",hasDynamicOffset:!0},visibility:GPUShaderStage.VERTEX},{binding:3,buffer:{type:"uniform"},visibility:GPUShaderStage.VERTEX},{binding:4,buffer:{type:"read-only-storage"},visibility:GPUShaderStage.VERTEX},{binding:5,buffer:{type:"read-only-storage"},visibility:GPUShaderStage.VERTEX}]});this.renderBindGroup=this.device.createBindGroup({label:"Render Bind Group",layout:t,entries:[{binding:0,resource:{buffer:this.perspectiveViewMatrix.buffer}},{binding:1,resource:{buffer:this.scenes.sceneBuffer}},{binding:2,resource:{buffer:this.parametersBuffer,size:256}},{binding:3,resource:{buffer:this.board.ballPhysicsShader.settingsBuffer}},{binding:4,resource:{buffer:this.board.ballPhysicsShader.heightsBuffer}},{binding:5,resource:{buffer:this.board.ballPhysicsShader.ballsToDrawBuffer}}]});const s=this.device.createPipelineLayout({label:"Renderer Render Pipeline Layout",bindGroupLayouts:[t]});this.renderPipeline=this.device.createRenderPipeline({label:"Renderer Render Pipeline",layout:s,vertex:{module:e.shader,buffers:[{arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}]},fragment:{module:e.shader,targets:[{format:this.canvasFormat}]},primitive:{cullMode:"front"},depthStencil:{format:"depth24plus",depthCompare:"less",depthWriteEnabled:!0}})}render(){this.perspectiveViewMatrix.copyFrom(this.camera.getPerspectiveViewMatrix()),this.perspectiveViewMatrix.writeBuffer(),this.renderToCanvas()}renderToCanvas(){const e=this.device.createCommandEncoder(),t=this.gpuTimer.beginRenderPass(e,{colorAttachments:[{view:this.ctx.getCurrentTexture().createView(),loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:this.depthTexture.createView(),depthLoadOp:"clear",depthStoreOp:"store",depthClearValue:1}});t.setPipeline(this.renderPipeline);for(let s=0;s<this.scenes.scenes.length;s++){const i=this.scenes.scenes[s];i.objectCount!==0&&(t.setBindGroup(0,this.renderBindGroup,[s*256]),i.mesh.bind(t),t.drawIndexedIndirect(i.drawArgs,0))}t.end(),this.device.queue.submit([e.finish()])}static async create(e,t){if(!("gpu"in navigator))throw new Error("WebGPU not supported");const s=await navigator.gpu.requestAdapter();if(s===null)throw new Error("Could not find suitable GPU Adapter. Maybe your browser doesn't support WebGPU?");const i=await s.requestDevice({requiredFeatures:M.requestFeatures(s,"timestamp-query")});if(i===null)throw new Error("Could not find suitable GPU Device. Maybe your browser doesn't support WebGPU?");return new M(e,t,i)}static requestFeatures(e,...t){return t.filter(s=>{const i=e.features.has(s);return i||console.warn(`GPU Feature ${s} not supported`),i})}}class W{settings;callbacks=[];frameID;lastFrameTime;totalTime;frame;constructor(e={}){this.frameID=null,this.lastFrameTime=0,this.totalTime=0,this.frame=1,this.callbacks=[],this.settings={wormholeThreshold:e.wormholeThreshold??500}}start(){this.running||(this.frame=1,this.totalTime=0,this.lastFrameTime=-1,this.frameID=requestAnimationFrame(this.tick.bind(this)))}stop(){this.running&&(cancelAnimationFrame(this.frameID),this.frameID=null)}toggle(){this.running?this.stop():this.start()}addCallback(e){this.callbacks.push(e)}tick(e){this.lastFrameTime<0&&(this.lastFrameTime=e);const t=e-this.lastFrameTime,s=this.totalTime+t;if(t<this.settings.wormholeThreshold){const i={deltaTime:t,totalTime:s,frame:this.frame++};for(const n of this.callbacks)n(i);this.totalTime=s}this.lastFrameTime=e,this.frameID=requestAnimationFrame(this.tick.bind(this))}get running(){return this.frameID!==null}}function X(c){H()}function H(){const c=document.getElementById("chevron"),e=document.getElementById("content");if(c===null)throw new Error("Could not find chevron element");if(e===null)throw new Error("Could not find info panel");c.addEventListener("click",()=>{c.classList.toggle("collapsed"),e.classList.toggle("collapsed")})}function $(c,e){return c+e-c%e}class C{static SETTINGS_BYTE_LENGTH=$(32,16);settingsBuffer;heightsBuffer;ballsToDrawBuffer;device;board;gpuTimer;bindGroup;computePipeline;ballVelocitiesBuffer;constructor(e,t,s){this.device=t,this.board=s;const i=document.getElementById("computeFrameTime");this.gpuTimer=new L(t,a=>{const l=a/1e3,h=a/1e6,d=h>1,f=(d?h:l).toFixed(2)+(d?"ms":"μs");i.textContent=f}),this.settingsBuffer=t.createBuffer({label:"Ball Physics Shader Settings Buffer",size:C.SETTINGS_BYTE_LENGTH,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this.heightsBuffer=t.createBuffer({label:"Heights Buffer",size:4*s.floorResolution*s.floorResolution,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),this.ballVelocitiesBuffer=t.createBuffer({label:"Ball Physics Shader Ball States Buffer",size:s.maxBallCount*4*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),this.ballsToDrawBuffer=t.createBuffer({label:"Balls to Draw",size:s.maxBallCount*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});const n=t.createBindGroupLayout({label:"Ball Physics Shader Bind Group Layout",entries:[{binding:0,buffer:{type:"uniform"},visibility:GPUShaderStage.COMPUTE},{binding:1,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:2,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:3,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:4,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:5,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE}]});this.bindGroup=t.createBindGroup({label:"Ball Physics Shader Bind Group",layout:n,entries:[{binding:0,resource:{buffer:this.settingsBuffer}},{binding:1,resource:{buffer:s.spheres.scene.sceneBuffer}},{binding:2,resource:{buffer:this.ballVelocitiesBuffer}},{binding:3,resource:{buffer:this.heightsBuffer}},{binding:4,resource:{buffer:s.scene.scenes[0].drawArgs}},{binding:5,resource:{buffer:this.ballsToDrawBuffer}}]});const r=t.createPipelineLayout({label:"Ball Physics Shader Compute Pipeline Layout",bindGroupLayouts:[n]});this.computePipeline=t.createComputePipeline({label:"Ball Physics Shader Compute Pipeline",layout:r,compute:{module:e.shader}})}updateSettings(e){const t=new k(C.SETTINGS_BYTE_LENGTH);t.writeFloat32(e),t.writeUint32(this.board.pegCount),t.writeFloat32(this.board.pegRadius),t.writeFloat32(this.board.ballRadius),t.writeUint32(this.board.ballCount),t.writeFloat32(this.board.start.y-this.board.height-this.board.floorOffset+this.board.ballRadius+this.board.floorThickness),t.writeFloat32(this.board.floorResolution),t.writeFloat32(-this.board.height-this.board.pegRadius),this.device.queue.writeBuffer(this.settingsBuffer,0,t.buffer)}run(e){this.updateSettings(e),this.board.scene.scenes[0].updateDrawArgs(void 0,this.board.pegCount);const t=this.device.createCommandEncoder(),s=this.gpuTimer.beginComputePass(t,{label:"Ball Physics Shader Compute Pass"});s.setBindGroup(0,this.bindGroup),s.setPipeline(this.computePipeline),s.dispatchWorkgroups(Math.ceil(this.board.ballCount/64),1,1),s.end(),this.device.queue.submit([t.finish()])}static async create(e,t){const s=await U.fetch(e,A("shaders/ballPhysics.wgsl"));return new C(s,e,t)}}class O{position;scale;colour;constructor(e={}){this.position=e.position??new o,this.scale=e.scale??new o(1,1,1),this.colour=e.colour??new o(1,1,1)}calculateModelMatrix(){const e=new S;return e.components[0]*=this.scale.x,e.components[1]*=this.scale.x,e.components[2]*=this.scale.x,e.components[4]*=this.scale.y,e.components[5]*=this.scale.y,e.components[6]*=this.scale.y,e.components[8]*=this.scale.z,e.components[9]*=this.scale.z,e.components[10]*=this.scale.z,e.components[12]=this.position.x,e.components[13]=this.position.y,e.components[14]=this.position.z,e}}function Q(c,e,t){const s=e*t,i=c/60,n=s*(1-Math.abs(i%2-1));return i<1?new o(s,n,0):i<2?new o(n,s,0):i<3?new o(0,s,n):i<4?new o(0,n,s):i<5?new o(n,0,s):new o(s,0,n)}class Z{vertexBuffer;indexBuffer;device;vertices;indices;rawVertices;rawIndices;label;constructor(e,t,s=""){this.rawVertices=e,this.rawIndices=t??null,this.label=s}initialise(e){this.device=e,this.update(this.rawVertices,this.rawIndices??void 0,!0)}update(e,t,s=!1){if(this.device)if(this.vertices=new Float32Array(e.map(i=>[i.position.x,i.position.y,i.position.z,i.normal.x,i.normal.y,i.normal.z]).flat()),(e.length!==this.rawVertices.length||s)&&(this.vertexBuffer?.destroy(),this.vertexBuffer=this.device.createBuffer({label:`${this.label} Vertex Buffer`,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,size:this.vertices.byteLength})),this.device.queue.writeBuffer(this.vertexBuffer,0,this.vertices.buffer),t!==void 0){const i=this.indexFormat==="uint16"?Uint16Array:Uint32Array;this.indices=new i(t),(this.rawIndices?.length!==t.length||s)&&(this.indexBuffer?.destroy(),this.indexBuffer=this.device.createBuffer({label:`${this.label} Index Buffer`,usage:GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST,size:this.indices.byteLength})),this.device.queue.writeBuffer(this.indexBuffer,0,this.indices.buffer)}else this.indices=null,this.indexBuffer=null}render(e){this.indexBuffer!==null?e.drawIndexed(this.indexCount):e.draw(this.rawVertices.length)}bind(e,t=0){e.setVertexBuffer(t,this.vertexBuffer),this.indexBuffer!==null&&e.setIndexBuffer(this.indexBuffer,this.indexFormat)}get verticeCount(){return this.rawVertices.length}get indexCount(){return this.indices?.length??0}get indexFormat(){return this.vertices.length>65535?"uint32":"uint16"}}class G extends Z{constructor(e,t){const s=[],i=[],n=[new o(1,0,0),new o(-1,0,0),new o(0,1,0),new o(0,-1,0),new o(0,0,1),new o(0,0,-1)];for(let r=0;r<n.length;r++){const a=n[r],l=G.createCubeFace(a,r*(e+1)*(e+1),e,t);for(const h of l.vertices)s.push(h);for(const h of l.indices)i.push(h)}super(s,i)}static createCubeFace(e,t,s,i){const n=[],r=[],a=new o(e.y,e.z,e.x).scale(i),l=o.cross(e,a).normalise().scale(i),h=o.subtract(o.scale(e,.5*i),o.add(a,l).scale(.5)),d=o.scale(a,1/s),m=o.scale(l,1/s);for(let u=0;u<=s;u++)for(let f=0;f<=s;f++){const B=o.scale(d,u).add(o.scale(m,f)),p=o.add(h,B);if(n.push({position:p,normal:e}),u<s&&f<s){const x=t+u+f*(s+1);r.push(x,x+1,x+s+2,x,x+s+2,x+s+1)}}return{vertices:n,indices:r}}}class _ extends G{constructor(e,t){super(e,t*2),this.rawVertices.forEach(s=>{s.position.normalise().scale(.5*t*2);const i=o.normalise(s.position);i.x*=Math.sqrt(1-.5*i.y*i.y-.5*i.z*i.z+i.y*i.y*i.z*i.z/3),i.y*=Math.sqrt(1-.5*i.x*i.x-.5*i.z*i.z+i.x*i.x*i.z*i.z/3),i.z*=Math.sqrt(1-.5*i.y*i.y-.5*i.x*i.x+i.y*i.y*i.x*i.x/3),s.normal=i.normalise()})}}class J{scene;spheres;floor;maxBallCount;pegCount;ballRadius;pegRadius;floorResolution;floorOffset;floorThickness;height;start;sideLength;initialised;ballPhysicsShader;constructor(e={}){this.initialised=!1,this.maxBallCount=e.ballCount??100,this.pegRadius=e.pegRadius??4,this.ballRadius=e.ballRadius??1,this.floorResolution=e.floorResolution??256,this.floorOffset=e.floorOffset??this.pegRadius*5,this.floorThickness=e.floorThickness??1,this.sideLength=e.sideLength??100,this.height=e.height??50,this.start=e.start??new o(0,0,0);const t=this.createPegs(e.layers??5);this.pegCount=t.length,this.spheres=new R(new _(5,1)),this.floor=new R(new G(1,1)),this.spheres.addObjects(t);const s=this.createFloor();this.floor.addObjects(s),this.scene=new K(2,[this.pegCount+this.maxBallCount,this.floorResolution*this.floorResolution])}get ballCount(){return this.spheres.objectCount-this.pegCount}createPegs(e){const t=[],s=e===1?this.height:this.height/(e-1),i=this.sideLength/e;for(let n=0;n<e;n++){const r=this.start.y-n*s,a=(e-n)/2,l=o.add(this.start,new o(-this.sideLength/2,r,-this.sideLength/2)).add(new o(a*i,0,a*i)),h=Q(360*(n/e),1,1);for(let d=0;d<n+1;d++){const m=d*i;for(let u=0;u<n+1;u++){const f=u*i,B=o.add(l,new o(m,0,f));t.push(new O({position:B,scale:new o(this.pegRadius,this.pegRadius,this.pegRadius),colour:h}))}}}return t}createFloor(){const e=[],t=o.subtract(this.start,new o(this.floorResolution*.5,this.floorOffset+this.height,this.floorResolution*.5)),s=this.floorResolution/this.floorResolution,i=new o(1,1,1),n=new o(this.floorResolution/this.floorResolution,this.floorThickness,this.floorResolution/this.floorResolution);for(let r=0;r<this.floorResolution;r++)for(let a=0;a<this.floorResolution;a++)e.push(new O({position:new o(t.x+r*s+n.x*.5,t.y+n.y*.5,t.z+a*s+n.z*.5),colour:i,scale:n}));return e}*createBalls(e=1){const t=this.pegRadius*5,s=new o(this.ballRadius,this.ballRadius,this.ballRadius),i=new o(1,1,1);for(let n=0;n<this.maxBallCount;n++){const r=1*this.ballRadius*(Math.random()-.5),a=1*this.ballRadius*(Math.random()-.5);this.spheres.addObjects([new O({position:o.add(this.start,new o(r,t,a)),scale:s,colour:i})],n%e===e-1),this.spheres.updateBuffer(1),yield}}tick(e){this.initialised&&this.ballPhysicsShader.run(e)}async initialise(e){this.initialised||(this.scene.initialise(e),this.spheres.initialise(this.scene,e),this.floor.initialise(this.scene,e),this.ballPhysicsShader=await C.create(e,this),this.initialised=!0)}}async function ee(){const c=document.getElementById("main"),e=new J({ballCount:1e5,layers:9,pegRadius:4,floorResolution:320,floorOffset:100,sideLength:125}),t=await M.create(c,{scene:e.scene,cameraOptions:{mouseSensitivity:.1,movementSpeed:.1}});await e.initialise(t.device),await t.initialise(e),t.camera.position=new o(0,10,20),t.camera.fovDegrees=60,X();const s=new W({wormholeThreshold:100}),i=1,n=50,r=e.createBalls(n);let a=r.next();s.addCallback(l=>{if(!a.done&&l.frame%i===i-1)for(let h=0;h<n;h++)a=r.next();t.camera.checkKeyboardInputs(l.deltaTime),e.tick(l.deltaTime),t.render()}),s.start(),c.addEventListener("click",()=>{c.requestPointerLock()})}ee().catch(c=>{const e=c instanceof Error?c.message:JSON.stringify(c),t=document.getElementById("message");t.classList.add("error"),t.textContent=e;const s=document.getElementById("chevron"),i=document.getElementById("content");s?.classList.add("collapsed"),i?.classList.add("collapsed"),console.error(e)});

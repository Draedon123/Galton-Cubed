(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();class G{samples;maxSamples;constructor(e){this.samples=[],this.maxSamples=e}get average(){return this.samples.reduce((e,t)=>e+t,0)/this.samples.length}addSample(e){this.samples.length===this.maxSamples&&this.samples.shift(),this.samples.push(e)}reset(){this.samples.splice(0,this.samples.length)}}class M{static modifiedDevices=new Set;canTimestamp;querySet;resolveBuffer;resultBuffer;rollingAverage;onUpdate;constructor(e,t=()=>{}){if(this.canTimestamp=e.features.has("timestamp-query"),this.onUpdate=t,this.rollingAverage=new G(50),this.canTimestamp&&(this.querySet=e.createQuerySet({label:"GPUTimer Query Set",type:"timestamp",count:2}),this.resolveBuffer=e.createBuffer({label:"GPUTimer Resolve Buffer",size:this.querySet.count*BigInt64Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=e.createBuffer({label:"GPUTimer Result Buffer",size:this.resolveBuffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})),!M.modifiedDevices.has(e)){const s=e.queue.submit.bind(e.queue);e.queue.submit=n=>{s(n),!(!this.canTimestamp||this.resultBuffer.mapState!=="unmapped")&&this.resultBuffer.mapAsync(GPUMapMode.READ).then(()=>{const i=new BigInt64Array(this.resultBuffer.getMappedRange());this.rollingAverage.addSample(Number(i[1]-i[0])),this.resultBuffer.unmap(),this.onUpdate(this.rollingAverage.average)})},M.modifiedDevices.add(e)}}get time(){return this.rollingAverage.average}beginComputePass(e,t){const s={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},n=e.beginComputePass({...t,...this.canTimestamp?{timestampWrites:s}:void 0}),i=n.end.bind(n);return n.end=()=>{i(),this.canTimestamp&&(e.resolveQuerySet(this.querySet,0,this.querySet.count,this.resolveBuffer,0),this.resultBuffer.mapState==="unmapped"&&e.copyBufferToBuffer(this.resolveBuffer,this.resultBuffer))},n}beginRenderPass(e,t){const s={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},n=e.beginRenderPass({...t,...this.canTimestamp?{timestampWrites:s}:void 0}),i=n.end.bind(n);return n.end=()=>{i(),this.canTimestamp&&(e.resolveQuerySet(this.querySet,0,this.querySet.count,this.resolveBuffer,0),this.resultBuffer.mapState==="unmapped"&&e.copyBufferToBuffer(this.resolveBuffer,this.resultBuffer))},n}reset(){this.rollingAverage.reset()}}class T{components;constructor(){this.components=new Float32Array(16),this.components[0]=1,this.components[5]=1,this.components[10]=1,this.components[15]=1}static multiplyMatrices(e,t,s=new T){const n=e.components[0],i=e.components[1],o=e.components[2],r=e.components[3],a=e.components[4],p=e.components[5],y=e.components[6],B=e.components[7],h=e.components[8],w=e.components[9],l=e.components[10],u=e.components[11],b=e.components[12],x=e.components[13],P=e.components[14],E=e.components[15];let f=t.components[0],d=t.components[1],g=t.components[2],v=t.components[3];return s.components[0]=f*n+d*a+g*h+v*b,s.components[1]=f*i+d*p+g*w+v*x,s.components[2]=f*o+d*y+g*l+v*P,s.components[3]=f*r+d*B+g*u+v*E,f=t.components[4],d=t.components[5],g=t.components[6],v=t.components[7],s.components[4]=f*n+d*a+g*h+v*b,s.components[5]=f*i+d*p+g*w+v*x,s.components[6]=f*o+d*y+g*l+v*P,s.components[7]=f*r+d*B+g*u+v*E,f=t.components[8],d=t.components[9],g=t.components[10],v=t.components[11],s.components[8]=f*n+d*a+g*h+v*b,s.components[9]=f*i+d*p+g*w+v*x,s.components[10]=f*o+d*y+g*l+v*P,s.components[11]=f*r+d*B+g*u+v*E,f=t.components[12],d=t.components[13],g=t.components[14],v=t.components[15],s.components[12]=f*n+d*a+g*h+v*b,s.components[13]=f*i+d*p+g*w+v*x,s.components[14]=f*o+d*y+g*l+v*P,s.components[15]=f*r+d*B+g*u+v*E,s}static perspective(e,t,s,n){const i=new T,o=1/Math.tan(e/2);if(i.components[0]=o/t,i.components[5]=o,i.components[11]=-1,i.components[15]=0,n!==1/0){const r=1/(s-n);i.components[10]=n*r,i.components[14]=n*s*r}else i.components[10]=-1,i.components[14]=-s;return i}static lookAt(e,t,s){const n=new T,i=1e-6;let o,r,a,p,y,B,h,w,l,u;const b=e.x,x=e.y,P=e.z,E=s.x,f=s.y,d=s.z,g=t.x,v=t.y,R=t.z;return Math.abs(b-g)<i&&Math.abs(x-v)<i&&Math.abs(P-R)<i?(console.warn("Look At too close to Position"),new T):(h=b-g,w=x-v,l=P-R,u=1/Math.sqrt(h*h+w*w+l*l),h*=u,w*=u,l*=u,o=f*l-d*w,r=d*h-E*l,a=E*w-f*h,u=Math.sqrt(o*o+r*r+a*a),u?(u=1/u,o*=u,r*=u,a*=u):(o=0,r=0,a=0),p=w*a-l*r,y=l*o-h*a,B=h*r-w*o,u=Math.sqrt(p*p+y*y+B*B),u?(u=1/u,p*=u,y*=u,B*=u):(p=0,y=0,B=0),n.components[0]=o,n.components[1]=p,n.components[2]=h,n.components[3]=0,n.components[4]=r,n.components[5]=y,n.components[6]=w,n.components[7]=0,n.components[8]=a,n.components[9]=B,n.components[10]=l,n.components[11]=0,n.components[12]=-(o*b+r*x+a*P),n.components[13]=-(p*b+y*x+B*P),n.components[14]=-(h*b+w*x+l*P),n.components[15]=1,n)}copyFrom(e){this.components[0]=e.components[0],this.components[1]=e.components[1],this.components[2]=e.components[2],this.components[3]=e.components[3],this.components[4]=e.components[4],this.components[5]=e.components[5],this.components[6]=e.components[6],this.components[7]=e.components[7],this.components[8]=e.components[8],this.components[9]=e.components[9],this.components[10]=e.components[10],this.components[11]=e.components[11],this.components[12]=e.components[12],this.components[13]=e.components[13],this.components[14]=e.components[14],this.components[15]=e.components[15]}}class F extends T{buffer;device;constructor(e,t,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST){super(),this.device=e,this.buffer=e.createBuffer({label:t,usage:s,size:64}),this.device=e}writeBuffer(){this.device.queue.writeBuffer(this.buffer,0,this.components.buffer)}}function q(m){return`/Galton-Cubed/${m}`}const D=Math.PI/180;function I(m){return m*D}const L=180/Math.PI;function O(m){return m*L}class c{components;constructor(e=0,t=0,s=0){this.components=new Float32Array(3),this.components[0]=e,this.components[1]=t,this.components[2]=s}static cross(e,t){const s=e.components[0],n=e.components[1],i=e.components[2],o=t.components[0],r=t.components[1],a=t.components[2];return new c(n*a-i*r,i*o-s*a,s*r-n*o)}static add(e,t){return new c(e.components[0]+t.components[0],e.components[1]+t.components[1],e.components[2]+t.components[2])}add(e){return this.components[0]+=e.components[0],this.components[1]+=e.components[1],this.components[2]+=e.components[2],this}static subtract(e,t){return new c(e.components[0]-t.components[0],e.components[1]-t.components[1],e.components[2]-t.components[2])}static scale(e,t){return new c(e.components[0]*t,e.components[1]*t,e.components[2]*t)}scale(e){return this.components[0]*=e,this.components[1]*=e,this.components[2]*=e,this}normalise(){const e=this.magnitude;if(e<1e-8)return console.error("Magnitude of vector too close to 0 to normalise"),this;const t=1/e;return this.components[0]*=t,this.components[1]*=t,this.components[2]*=t,this}get magnitude(){return Math.hypot(this.components[0],this.components[1],this.components[2])}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}set x(e){this.components[0]=e}set y(e){this.components[1]=e}set z(e){this.components[2]=e}}class z{position;lookAt;aspectRatio;near;far;fovRadians;constructor(e={}){this.position=e.position??new c,this.lookAt=e.lookAt??new c(0,0,-1),this.aspectRatio=e.aspectRatio??16/9,this.near=e.near??.1,this.far=e.far??1e3,this.fovRadians=I(e.fovDegrees??60)}get fovDegrees(){return O(this.fovRadians)}set fovDegrees(e){this.fovRadians=I(e)}getPerspectiveMatrix(){return T.perspective(this.fovRadians,this.aspectRatio,this.near,this.far)}getViewMatrix(){const e=c.subtract(this.lookAt,this.position).normalise(),t=new c(0,1,0);return T.lookAt(this.position,c.add(this.position,e),t)}getPerspectiveViewMatrix(){return T.multiplyMatrices(this.getPerspectiveMatrix(),this.getViewMatrix())}}class V{vertexBuffer;indexBuffer;vertices;indices;rawVertices;rawIndices;label;constructor(e,t,s=""){this.rawVertices=e,this.rawIndices=t??null,this.label=s}initialise(e){this.vertices=new Float32Array(this.rawVertices.map(t=>[t.x,t.y,t.z]).flat()),this.rawIndices?(this.indices=new(this.indexFormat==="uint16"?Uint16Array:Uint32Array)(this.rawIndices),this.indexBuffer=e.createBuffer({label:`${this.label} Index Buffer`,usage:GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST,size:this.indices.byteLength}),e.queue.writeBuffer(this.indexBuffer,0,this.indices.buffer)):(this.indices=null,this.indexBuffer=null),this.vertexBuffer=e.createBuffer({label:`${this.label} Vertex Buffer`,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,size:this.vertices.byteLength}),e.queue.writeBuffer(this.vertexBuffer,0,this.vertices.buffer)}render(e){e.setVertexBuffer(0,this.vertexBuffer),this.indexBuffer!==null?(e.setIndexBuffer(this.indexBuffer,this.indexFormat),e.drawIndexed(this.indexCount)):e.draw(this.vertices.length/3)}get verticeCount(){return this.vertices.length/3}get indexCount(){return this.indices?.length??0}get indexFormat(){return this.vertices.length>65535?"uint32":"uint16"}}class A extends V{constructor(e,t){const s=[],n=[],i=[new c(1,0,0),new c(-1,0,0),new c(0,1,0),new c(0,-1,0),new c(0,0,1),new c(0,0,-1)];for(let o=0;o<i.length;o++){const r=i[o],a=A.createCubeFace(r,o*e*e,e,t);s.push(...a.vertices),n.push(...a.indices)}super(s,n)}static createCubeFace(e,t,s,n){const i=[],o=[],r=new c(e.y,e.z,e.x).scale(2*n),a=c.cross(e,r),p=c.subtract(e,c.add(r,a).scale(.5)),y=c.scale(r,1/s),B=c.scale(a,1/s);for(let h=0;h<s;h++)for(let w=0;w<s;w++)if(i.push(c.add(p,c.scale(y,h)).add(c.scale(B,w)).normalise().scale(n)),h!==s-1&&w!==s-1){const l=t+h+w*s;o.push(l,l+1,l+s+1,l,l+s+1,l+s)}return{vertices:i,indices:o}}}class S{shader;constructor(e,t,s){this.shader=e.createShaderModule({label:s,code:t})}static async fetch(e,t,s,n=i=>i){const i=await(await fetch(t)).text(),o=await S.preprocess(t,i);return new S(e,n(o),s)}static async preprocess(e,t){return S.resolveImports(e,t)}static async resolveImports(e,t,s=[]){const n=/#!import.*\s/g,i=e.split("/"),o=i.slice(0,i.length-1).join("/")+"/",r=t.match(n)?.map(p=>p.replaceAll(/(#!import)|\s/g,"")).filter(p=>!s.includes(p)).map(p=>o+p+".wgsl")??[];return((await Promise.all(r.map(async p=>{const y=await fetch(p);if(!y.ok)return"";const B=await y.text();return S.resolveImports(p,B,s)}))).join("")+t).replaceAll(n,"")}}const U=new A(20,2);class C{canvas;camera;settings;device;ctx;canvasFormat;gpuTimer;initialised;renderBindGroup;renderPipeline;vertexBuffer;objectPositions;depthTexture;perspectiveViewMatrix;constructor(e,t,s){const n=e.getContext("webgpu");if(n===null)throw new Error("Could not create WebGPU Canvas Context");this.settings={timing:t.timing},this.canvas=e,this.device=s,this.ctx=n,this.canvasFormat="rgba8unorm",this.camera=new z(t.cameraOptions),this.perspectiveViewMatrix=new F(s,"Perspective View Matrix"),this.gpuTimer=new M(this.device,i=>{const o=i/1e3,r=i/1e6,a=i/1e9,p=r>1,y=(p?r:o).toFixed(2),B=p?"ms":"μs";if(this.settings.timing?.frameTimeElement!==void 0&&(this.settings.timing.frameTimeElement.textContent=y+B),this.settings.timing?.fpsElement!==void 0){const h=1/a;this.settings.timing.fpsElement.textContent=h.toFixed(2)}}),this.gpuTimer.canTimestamp||(this.settings.timing?.frameTimeElement!==void 0&&(this.settings.timing.frameTimeElement.textContent="[Not supported by browser]"),this.settings.timing?.fpsElement!==void 0&&(this.settings.timing.fpsElement.textContent="[Not supported by browser]")),this.initialised=!1}async initialise(){this.initialised||(U.initialise(this.device),await this.initialiseRendering(),new ResizeObserver(e=>{const t=e[0],s=t.devicePixelContentBoxSize[0].inlineSize,n=t.devicePixelContentBoxSize[0].blockSize;this.canvas.width=s,this.canvas.height=n,this.camera.aspectRatio=s/n,this.depthTexture?.destroy(),this.depthTexture=this.createDepthTexture(),this.gpuTimer.reset(),this.render()}).observe(this.canvas),this.initialised=!0)}createDepthTexture(){return this.device.createTexture({label:"Renderer Depth Texture",size:[this.canvas.width,this.canvas.height],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})}async initialiseRendering(){this.ctx.configure({device:this.device,format:this.canvasFormat});const e=await S.fetch(this.device,q("shaders/render.wgsl"));this.depthTexture=this.createDepthTexture(),this.vertexBuffer=U.vertexBuffer,this.objectPositions=this.device.createBuffer({label:"Positions Buffer",size:24,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),this.device.queue.writeBuffer(this.objectPositions,0,new Float32Array([0,0,0,3,0,0]));const t=this.device.createBindGroupLayout({label:"Cube Bind Group Layout",entries:[{binding:0,buffer:{type:"uniform"},visibility:GPUShaderStage.VERTEX}]});this.renderBindGroup=this.device.createBindGroup({label:"Render Bing Group",layout:t,entries:[{binding:0,resource:{buffer:this.perspectiveViewMatrix.buffer}}]});const s=this.device.createPipelineLayout({label:"Renderer Render Pipeline Layout",bindGroupLayouts:[t]});this.renderPipeline=this.device.createRenderPipeline({label:"Renderer Render Pipeline",layout:s,vertex:{module:e.shader,buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,stepMode:"instance",attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:e.shader,targets:[{format:this.canvasFormat}]},primitive:{cullMode:"front"},depthStencil:{format:"depth24plus",depthCompare:"less",depthWriteEnabled:!0}})}render(){this.perspectiveViewMatrix.copyFrom(this.camera.getPerspectiveViewMatrix()),this.perspectiveViewMatrix.writeBuffer(),this.renderToCanvas()}renderToCanvas(){const e=this.device.createCommandEncoder(),t=this.gpuTimer.beginRenderPass(e,{colorAttachments:[{view:this.ctx.getCurrentTexture().createView(),loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:this.depthTexture.createView(),depthLoadOp:"clear",depthStoreOp:"store",depthClearValue:1}});t.setVertexBuffer(0,this.vertexBuffer),t.setVertexBuffer(1,this.objectPositions),t.setBindGroup(0,this.renderBindGroup),t.setPipeline(this.renderPipeline),U.render(t),t.end(),this.device.queue.submit([e.finish()])}static async create(e,t={}){if(!("gpu"in navigator))throw new Error("WebGPU not supported");const s=await navigator.gpu.requestAdapter();if(s===null)throw new Error("Could not find suitable GPU Adapter. Maybe your browser doesn't support WebGPU?");const n=await s.requestDevice({requiredFeatures:C.requestFeatures(s,"timestamp-query")});if(n===null)throw new Error("Could not find suitable GPU Device. Maybe your browser doesn't support WebGPU?");return new C(e,t,n)}static requestFeatures(e,...t){return t.filter(s=>{const n=e.features.has(s);return n||console.warn(`GPU Feature ${s} not supported`),n})}}class k{settings;callbacks=[];frameID;lastFrameTime;totalTime;constructor(e={}){this.frameID=null,this.lastFrameTime=0,this.totalTime=0,this.callbacks=[],this.settings={wormholeThreshold:e.wormholeThreshold??500}}start(){this.running||(this.totalTime=0,this.lastFrameTime=-1,this.frameID=requestAnimationFrame(this.tick.bind(this)))}stop(){this.running&&(cancelAnimationFrame(this.frameID),this.frameID=null)}toggle(){this.running?this.stop():this.start()}addCallback(e){this.callbacks.push(e)}tick(e){this.lastFrameTime<0&&(this.lastFrameTime=e);const t=e-this.lastFrameTime,s=this.totalTime+t;if(t<this.settings.wormholeThreshold){const n={deltaTime:t,totalTime:s};for(const i of this.callbacks)i(n);this.totalTime=s}this.lastFrameTime=e,this.frameID=requestAnimationFrame(this.tick.bind(this))}get running(){return this.frameID!==null}}function N(m){W()}function W(){const m=document.getElementById("chevron"),e=document.getElementById("content");if(m===null)throw new Error("Could not find chevron element");if(e===null)throw new Error("Could not find info panel");m.addEventListener("click",()=>{m.classList.toggle("collapsed"),e.classList.toggle("collapsed")})}async function Y(){const m=document.getElementById("main"),e=document.getElementById("frameTime"),t=document.getElementById("fps"),s=await C.create(m,{timing:{frameTimeElement:e,fpsElement:t}});await s.initialise(),s.camera.position=new c(4,2.5,2.5),s.camera.fovDegrees=60,s.camera.lookAt=new c(0,0,0),N();const n=new k;n.addCallback(()=>{s.render()}),n.start(),m.addEventListener("click",()=>{m.requestPointerLock()})}Y().catch(m=>{const e=m instanceof Error?m.message:JSON.stringify(m),t=document.getElementById("message");t.classList.add("error"),t.textContent=e;const s=document.getElementById("chevron"),n=document.getElementById("content");s?.classList.add("collapsed"),n?.classList.add("collapsed"),console.trace(),console.error(e)});

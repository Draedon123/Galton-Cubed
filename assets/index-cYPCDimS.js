(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();class W{samples;maxSamples;constructor(e){this.samples=[],this.maxSamples=e}get average(){return this.samples.reduce((e,t)=>e+t,0)/this.samples.length}addSample(e){this.samples.length===this.maxSamples&&this.samples.shift(),this.samples.push(e)}reset(){this.samples.splice(0,this.samples.length)}}class ${canTimestamp;querySet;resolveBuffer;resultBuffer;rollingAverage;onUpdate;constructor(e,t=()=>{}){this.canTimestamp=e.features.has("timestamp-query"),this.onUpdate=t,this.rollingAverage=new W(50),this.canTimestamp&&(this.querySet=e.createQuerySet({label:"GPUTimer Query Set",type:"timestamp",count:2}),this.resolveBuffer=e.createBuffer({label:"GPUTimer Resolve Buffer",size:this.querySet.count*8,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=e.createBuffer({label:"GPUTimer Result Buffer",size:this.resolveBuffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}));const s=e.queue.submit.bind(e.queue);e.queue.submit=i=>{s(i),this.canTimestamp&&e.queue.onSubmittedWorkDone().then(()=>{this.resultBuffer.mapState==="unmapped"&&this.resultBuffer.mapAsync(GPUMapMode.READ).then(()=>{const n=new BigInt64Array(this.resultBuffer.getMappedRange());this.rollingAverage.addSample(Number(n[1]-n[0])),this.resultBuffer.unmap(),this.onUpdate(this.rollingAverage.average)})})}}get time(){return this.rollingAverage.average}beginPass(e,t,s){const i={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},n=e[t==="render"?"beginRenderPass":"beginComputePass"]({...s,...this.canTimestamp?{timestampWrites:i}:void 0}),o=n.end.bind(n);return n.end=()=>{o(),this.canTimestamp&&(e.resolveQuerySet(this.querySet,0,this.querySet.count,this.resolveBuffer,0),this.resultBuffer.mapState==="unmapped"&&e.copyBufferToBuffer(this.resolveBuffer,this.resultBuffer))},n}beginComputePass(e,t){return this.beginPass(e,"compute",t)}beginRenderPass(e,t){return this.beginPass(e,"render",t)}reset(){this.rollingAverage.reset()}}class R{components;constructor(){this.components=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}static multiplyMatrices(e,t,s=new R){const i=e.components[0],n=e.components[1],o=e.components[2],a=e.components[3],c=e.components[4],h=e.components[5],u=e.components[6],m=e.components[7],d=e.components[8],f=e.components[9],b=e.components[10],p=e.components[11],B=e.components[12],v=e.components[13],P=e.components[14],T=e.components[15];let g=t.components[0],y=t.components[1],w=t.components[2],x=t.components[3];return s.components[0]=g*i+y*c+w*d+x*B,s.components[1]=g*n+y*h+w*f+x*v,s.components[2]=g*o+y*u+w*b+x*P,s.components[3]=g*a+y*m+w*p+x*T,g=t.components[4],y=t.components[5],w=t.components[6],x=t.components[7],s.components[4]=g*i+y*c+w*d+x*B,s.components[5]=g*n+y*h+w*f+x*v,s.components[6]=g*o+y*u+w*b+x*P,s.components[7]=g*a+y*m+w*p+x*T,g=t.components[8],y=t.components[9],w=t.components[10],x=t.components[11],s.components[8]=g*i+y*c+w*d+x*B,s.components[9]=g*n+y*h+w*f+x*v,s.components[10]=g*o+y*u+w*b+x*P,s.components[11]=g*a+y*m+w*p+x*T,g=t.components[12],y=t.components[13],w=t.components[14],x=t.components[15],s.components[12]=g*i+y*c+w*d+x*B,s.components[13]=g*n+y*h+w*f+x*v,s.components[14]=g*o+y*u+w*b+x*P,s.components[15]=g*a+y*m+w*p+x*T,s}static perspective(e,t,s,i){const n=new R,o=1/Math.tan(e/2);if(n.components[0]=o/t,n.components[5]=o,n.components[11]=-1,n.components[15]=0,i!==1/0){const a=1/(s-i);n.components[10]=i*a,n.components[14]=i*s*a}else n.components[10]=-1,n.components[14]=-s;return n}static lookAt(e,t,s){const i=new R,n=1e-6;let o,a,c,h,u,m,d,f,b,p;const B=e.x,v=e.y,P=e.z,T=s.x,g=s.y,y=s.z,w=t.x,x=t.y,U=t.z;return Math.abs(B-w)<n&&Math.abs(v-x)<n&&Math.abs(P-U)<n?(console.warn("Look At too close to Position"),new R):(d=B-w,f=v-x,b=P-U,p=1/Math.sqrt(d*d+f*f+b*b),d*=p,f*=p,b*=p,o=g*b-y*f,a=y*d-T*b,c=T*f-g*d,p=Math.sqrt(o*o+a*a+c*c),p?(p=1/p,o*=p,a*=p,c*=p):(o=0,a=0,c=0),h=f*c-b*a,u=b*o-d*c,m=d*a-f*o,p=Math.sqrt(h*h+u*u+m*m),p?(p=1/p,h*=p,u*=p,m*=p):(h=0,u=0,m=0),i.components[0]=o,i.components[1]=h,i.components[2]=d,i.components[3]=0,i.components[4]=a,i.components[5]=u,i.components[6]=f,i.components[7]=0,i.components[8]=c,i.components[9]=m,i.components[10]=b,i.components[11]=0,i.components[12]=-(o*B+a*v+c*P),i.components[13]=-(h*B+u*v+m*P),i.components[14]=-(d*B+f*v+b*P),i.components[15]=1,i)}copyFrom(e){return this.components.set(e.components),this}invert(){const e=this.components[0],t=this.components[1],s=this.components[2],i=this.components[3],n=this.components[4],o=this.components[5],a=this.components[6],c=this.components[7],h=this.components[8],u=this.components[9],m=this.components[10],d=this.components[11],f=this.components[12],b=this.components[13],p=this.components[14],B=this.components[15],v=e*o-t*n,P=e*a-s*n,T=e*c-i*n,g=t*a-s*o,y=t*c-i*o,w=s*c-i*a,x=h*b-u*f,U=h*p-m*f,E=h*B-d*f,k=u*p-m*b,C=u*B-d*b,O=m*B-d*p,Y=v*O-P*C+T*k+g*E-y*U+w*x;if(Y===0)return console.warn("Determinant is 0. Matrix not inverted"),this;const S=1/Y;return this.components[0]=(o*O-a*C+c*k)*S,this.components[1]=(s*C-t*O-i*k)*S,this.components[2]=(b*w-p*y+B*g)*S,this.components[3]=(m*y-u*w-d*g)*S,this.components[4]=(a*E-n*O-c*U)*S,this.components[5]=(e*O-s*E+i*U)*S,this.components[6]=(p*T-f*w-B*P)*S,this.components[7]=(h*w-m*T+d*P)*S,this.components[8]=(n*C-o*E+c*x)*S,this.components[9]=(t*E-e*C-i*x)*S,this.components[10]=(f*y-b*T+B*v)*S,this.components[11]=(u*T-h*y-d*v)*S,this.components[12]=(o*U-n*k-a*x)*S,this.components[13]=(e*k-t*U+s*x)*S,this.components[14]=(b*P-f*g-p*v)*S,this.components[15]=(h*g-u*P+m*v)*S,this}}class K extends R{buffer;device;constructor(e,t,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST){super(),this.device=e,this.buffer=e.createBuffer({label:t,usage:s,size:64}),this.device=e}writeBuffer(){this.device.queue.writeBuffer(this.buffer,0,this.components.buffer)}}function I(l){return`/Galton-Cubed/${l}`}const X=Math.PI/180;function A(l){return l*X}const H=180/Math.PI;function q(l){return l*H}function Q(l,e,t){return Math.max(Math.min(l,t),e)}class Z{keybinds;keysDown;constructor(e){this.keysDown=new Set,this.keybinds=new Set(e)}addEventListeners(){document.addEventListener("keydown",this.onKeyDown.bind(this)),document.addEventListener("keyup",this.onKeyUp.bind(this))}isKeyDown(e){return this.keysDown.has(e)}onKeyDown(e){const t=e.code;this.keybinds.has(t)&&this.keysDown.add(t)}onKeyUp(e){const t=e.code;this.keysDown.delete(t)}}class r{components;constructor(e=0,t=0,s=0){this.components=new Float32Array([e,t,s])}static cross(e,t){const s=e.components[0],i=e.components[1],n=e.components[2],o=t.components[0],a=t.components[1],c=t.components[2];return new r(i*c-n*a,n*o-s*c,s*a-i*o)}static add(e,t){return new r(e.components[0]+t.components[0],e.components[1]+t.components[1],e.components[2]+t.components[2])}add(e){return this.components[0]+=e.components[0],this.components[1]+=e.components[1],this.components[2]+=e.components[2],this}static subtract(e,t){return new r(e.components[0]-t.components[0],e.components[1]-t.components[1],e.components[2]-t.components[2])}subtract(e){return this.components[0]-=e.components[0],this.components[1]-=e.components[1],this.components[2]-=e.components[2],this}static scale(e,t){return new r(e.components[0]*t,e.components[1]*t,e.components[2]*t)}scale(e){return this.components[0]*=e,this.components[1]*=e,this.components[2]*=e,this}static normalise(e){return r.clone(e).normalise()}normalise(){const e=this.magnitude;if(e<1e-8)return console.error("Magnitude of vector too close to 0 to normalise"),this;const t=1/e;return this.components[0]*=t,this.components[1]*=t,this.components[2]*=t,this}static clone(e){return new r(e.components[0],e.components[1],e.components[2])}get magnitude(){return Math.hypot(this.components[0],this.components[1],this.components[2])}get x(){return this.components[0]}get y(){return this.components[1]}get z(){return this.components[2]}set x(e){this.components[0]=e}set y(e){this.components[1]=e}set z(e){this.components[2]=e}}class _{position;forward;aspectRatio;near;far;movementSpeed;mouseSensitivity;pitch;yaw;fovRadians;keyboardManager;keybinds;constructor(e={}){this.position=e.position??new r,this.forward=new r(0,0,-1),this.aspectRatio=e.aspectRatio??16/9,this.near=e.near??.1,this.far=e.far??1e3,this.fovRadians=A(e.fovDegrees??60),this.movementSpeed=e.movementSpeed??1,this.mouseSensitivity=e.mouseSensitivity??1,this.pitch=0,this.yaw=-90,this.keybinds={forwards:e.keybinds?.forwards??"KeyW",backwards:e.keybinds?.backwards??"KeyS",left:e.keybinds?.left??"KeyA",right:e.keybinds?.right??"KeyD",up:e.keybinds?.up??"Space",down:e.keybinds?.down??"ShiftLeft"},this.keyboardManager=new Z(Object.values(this.keybinds)),this.addEventListeners()}checkKeyboardInputs(e){const t=this.movementSpeed*e;if(this.keyboardManager.isKeyDown(this.keybinds.forwards)){const s=r.clone(this.forward);s.y=0,s.normalise(),this.position.add(r.scale(s,t))}if(this.keyboardManager.isKeyDown(this.keybinds.backwards)){const s=r.clone(this.forward);s.y=0,s.normalise(),this.position.subtract(r.scale(s,t))}if(this.keyboardManager.isKeyDown(this.keybinds.left)){const s=r.clone(this.forward);s.y=0,s.normalise(),this.position.subtract(r.cross(s,new r(0,1,0)).normalise().scale(t))}if(this.keyboardManager.isKeyDown(this.keybinds.right)){const s=r.clone(this.forward);s.y=0,s.normalise(),this.position.add(r.cross(s,new r(0,1,0)).normalise().scale(t))}this.keyboardManager.isKeyDown(this.keybinds.up)&&(this.position.y+=t),this.keyboardManager.isKeyDown(this.keybinds.down)&&(this.position.y-=t)}addEventListeners(){this.keyboardManager.addEventListeners(),document.addEventListener("mousemove",e=>{const t=e.movementX*this.mouseSensitivity,s=-e.movementY*this.mouseSensitivity;this.yaw+=t,this.pitch=Q(this.pitch+s,-89.9,89.9),this.updateForwardVector()})}get fovDegrees(){return q(this.fovRadians)}set fovDegrees(e){this.fovRadians=A(e)}getPerspectiveMatrix(){return R.perspective(this.fovRadians,this.aspectRatio,this.near,this.far)}getViewMatrix(){const e=new r(0,1,0);return R.lookAt(this.position,r.add(this.position,this.forward),e)}getPerspectiveViewMatrix(){return R.multiplyMatrices(this.getPerspectiveMatrix(),this.getViewMatrix())}updateForwardVector(){const e=A(this.yaw),t=A(this.pitch),s=Math.cos(e),i=Math.cos(t),n=Math.sin(e),o=Math.sin(t),a=new r(s*i,o,n*i).normalise();this.forward=a}lookAt(e){this.forward=r.subtract(e,this.position).normalise(),this.yaw=q(Math.atan2(this.forward.z,this.forward.x)),this.pitch=q(Math.asin(this.forward.y))}}class G{shader;constructor(e,t,s){this.shader=e.createShaderModule({label:s,code:t})}static async fetch(e,t,s,i=n=>n){const n=await(await fetch(t)).text(),o=await G.preprocess(t,n);return new G(e,i(o),s)}static async preprocess(e,t){return G.resolveImports(e,t)}static async resolveImports(e,t,s=[]){const i=/#!import.*\s/g,n=e.split("/"),o=n.slice(0,n.length-1).join("/")+"/",a=t.match(i)?.map(h=>h.replaceAll(/(#!import)|\s/g,"")).filter(h=>!s.includes(h)).map(h=>o+h+".wgsl")??[];return((await Promise.all(a.map(async h=>{const u=await fetch(h);if(!u.ok)return"";const m=await u.text();return G.resolveImports(h,m,s)}))).join("")+t).replaceAll(i,"")}}class j{buffer;dataview;littleEndian;offset;constructor(e,t=!0,s=0){this.buffer=new ArrayBuffer(e),this.dataview=new DataView(this.buffer),this.littleEndian=t,this.offset=s}writeUint8(e){this.dataview.setUint8(this.offset,e),this.offset+=1}writeUint32(e){this.dataview.setUint32(this.offset,e,this.littleEndian),this.offset+=4}writeFloat32(e){this.dataview.setFloat32(this.offset,e,this.littleEndian),this.offset+=4}writeVec3f(e){this.writeFloat32(e.x),this.writeFloat32(e.y),this.writeFloat32(e.z)}writeMat4x4f(e){new Float32Array(this.buffer,this.offset,16).set(e.components),this.offset+=64}pad(e){this.offset+=e}}class M{mesh;scene;drawArgs;objects;initialised;device;constructor(e){this.initialised=!1,this.objects=[],this.mesh=e}initialise(e,t){this.initialised||(e.scenes.push(this),this.device=t,this.scene=e,this.mesh.initialise(t),this.drawArgs=t.createBuffer({label:"Draw Arguments",size:20,usage:GPUBufferUsage.INDIRECT|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),this.initialised=!0,this.updateBuffer(),this.updateDrawArgs())}updateBuffer(e=this.objects.length){if(!this.initialised)return;const t=new j(e*M.objectByteLength);for(let s=this.objects.length-e;s<this.objects.length;s++){const i=this.objects[s],n=i.calculateModelMatrix();t.writeMat4x4f(n),t.writeVec3f(i.colour),t.pad(4)}this.device.queue.writeBuffer(this.scene.sceneBuffer,this.sceneByteOffset+(this.objects.length-e)*M.objectByteLength,t.buffer)}addObjects(e,t=!0){const s=this.scene?.scenes.indexOf(this),i=this.scene?.maxObjectsPerScene[s];for(const n of e){if(this.objects.length>=i){console.warn(`Maximum number of objects reached (${i}). New objects not added`);break}this.objects.push(n)}t&&this.updateDrawArgs()}updateDrawArgs(e=this.mesh.indexCount,t=this.objectCount){this.initialised&&this.device.queue.writeBuffer(this.drawArgs,0,new Uint32Array([e,t]))}get objectCount(){return this.objects.length}get sceneByteOffset(){const e=this.scene.scenes.indexOf(this);return this.scene.scenes.reduce((t,s,i)=>i>=e?t:t+s.byteLength,0)}get maxObjects(){return this.scene.maxObjectsPerScene[this.scene.scenes.indexOf(this)]}get byteLength(){return this.maxObjects*M.objectByteLength}static get objectByteLength(){return 80}}class J{maxObjectsPerScene;maxScenes;scenes;sceneBuffer;initialised;constructor(e,t=128){this.maxObjectsPerScene=typeof t=="number"?new Array(e).fill(0).map(()=>t):Array.from({length:e},(i,n)=>t[n]??128),this.maxScenes=e,this.scenes=[];const s=this.scenes.push.bind(this.scenes);this.scenes.push=(...i)=>{for(const n of i){if(this.scenes.length>=this.maxScenes){console.warn("Maximum number of scenes reached. New scenes not added");break}s(n)}return this.scenes.length},this.initialised=!1}initialise(e){if(!this.initialised){this.sceneBuffer=e.createBuffer({label:"Scene Buffer",size:this.maxScenes*this.maxObjectsPerScene.reduce((t,s)=>t+s,0)*M.objectByteLength,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});for(const t of this.scenes)t.initialise(this,e),t.updateBuffer();this.initialised=!0}}}class D{label;texture;constructor(e,t){this.label=e,this.texture=t}static async create(e,t,...s){const i=s.map(async c=>await(await fetch(I(c))).blob()),n=await Promise.all(i),o=await Promise.all(n.map(c=>createImageBitmap(c))),a=e.createTexture({label:t,format:"rgba8unorm",size:[o[0].width,o[0].height,o.length],usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT});for(let c=0;c<o.length;c++){const h=o[c];e.queue.copyExternalImageToTexture({source:h},{texture:a,origin:[0,0,c]},{width:h.width,height:h.height})}return new D(t,a)}static async createCubemap(e,t,s){return await D.create(e,t,`${s}/px.png`,`${s}/nx.png`,`${s}/py.png`,`${s}/ny.png`,`${s}/pz.png`,`${s}/nz.png`)}}class N{label;inversePespectiveViewMatrix;bindGroups=[];device;activeSkybox;renderBindGroupLayout;renderPipeline;skyboxes;sampler;constructor(e,t,s,i){this.device=e,this.label=i,this.activeSkybox=-1,this.skyboxes=[],this.bindGroups=[],this.inversePespectiveViewMatrix=new K(e,`${this.label} Inverse Perspective View Matrix Buffer`),this.sampler=this.device.createSampler({label:`${this.label} Sampler`,minFilter:"linear",magFilter:"linear"}),this.renderBindGroupLayout=this.device.createBindGroupLayout({label:`${this.label} Bind Group Layout`,entries:[{binding:0,sampler:{},visibility:GPUShaderStage.FRAGMENT},{binding:1,texture:{viewDimension:"cube"},visibility:GPUShaderStage.FRAGMENT},{binding:2,buffer:{},visibility:GPUShaderStage.FRAGMENT}]});const n=this.device.createPipelineLayout({label:`${this.label} Render Pipeline Layout`,bindGroupLayouts:[this.renderBindGroupLayout]});this.renderPipeline=this.device.createRenderPipeline({label:`${this.label} Render Pipeline`,layout:n,vertex:{module:t.shader,entryPoint:"vertexMain"},fragment:{module:t.shader,entryPoint:"fragmentMain",targets:[{format:s}]},depthStencil:{depthWriteEnabled:!0,depthCompare:"less-equal",format:"depth24plus"}});for(let o=0,a=this.skyboxes.length;o<a;o++){const c=this.skyboxes[o];this.skyboxes.splice(0,1),this.addSkybox(c)}}static async create(e,t,s){const i=await G.fetch(e,I("shaders/skybox.wgsl"),`${s} Shader Module`);return new N(e,i,t,s)}addSkybox(e){const t=this.device.createBindGroup({label:`${this.label} ${e.label} Bind Group`,layout:this.renderBindGroupLayout,entries:[{binding:0,resource:this.sampler},{binding:1,resource:e.texture.createView({dimension:"cube"})},{binding:2,resource:{buffer:this.inversePespectiveViewMatrix.buffer}}]});this.skyboxes.push(e),this.bindGroups.push(t),this.activeSkybox===-1&&(this.activeSkybox=this.skyboxes.length-1)}setActiveSkybox(e){if(e===null){this.activeSkybox=-1;return}this.skyboxes.includes(e)||this.addSkybox(e);const t=this.skyboxes.findIndex(s=>s===e);this.activeSkybox=t}render(e,t){if(this.activeSkybox===-1){console.warn("No active skybox");return}this.inversePespectiveViewMatrix.copyFrom(t.getPerspectiveViewMatrix().invert()),this.inversePespectiveViewMatrix.writeBuffer(),e.setPipeline(this.renderPipeline),e.setBindGroup(0,this.bindGroups[this.activeSkybox]),e.draw(3)}}class F{canvas;camera;scenes;device;ctx;canvasFormat;gpuTimer;initialised;renderBindGroup;renderPipeline;depthTexture;board;skyboxRenderer;parametersBuffer;perspectiveViewMatrix;constructor(e,t,s){const i=e.getContext("webgpu");if(i===null)throw new Error("Could not create WebGPU Canvas Context");this.canvas=e,this.device=s,this.ctx=i,this.canvasFormat="rgba8unorm",this.camera=new _(t.cameraOptions),this.scenes=t.scene;const n=document.getElementById("renderFrameTime"),o=document.getElementById("fps");this.gpuTimer=new $(this.device,a=>{const c=a/1e3,h=a/1e6,u=a/1e9,m=h>1,d=(m?h:c).toFixed(2),f=m?"ms":"μs",b=1/u;n.textContent=d+f,o.textContent=b.toFixed(2)}),this.gpuTimer.canTimestamp||(n.textContent="[Not supported by browser]",o.textContent="[Not supported by browser]"),this.parametersBuffer=s.createBuffer({label:"Parameters Buffer",size:this.scenes.maxScenes*256,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this.perspectiveViewMatrix=new K(s,"Perspective View Matrix"),this.initialised=!1}async initialise(e){if(this.initialised)return;this.board=e,await this.initialiseRendering();const t=new j(this.scenes.maxScenes*256);for(let s=0;s<this.scenes.maxObjectsPerScene.length;s++){const i=this.scenes.maxObjectsPerScene[s-1]??0;t.writeUint32(i),t.pad(252)}this.device.queue.writeBuffer(this.parametersBuffer,0,t.buffer),new ResizeObserver(s=>{const i=s[0],n=i.devicePixelContentBoxSize[0].inlineSize,o=i.devicePixelContentBoxSize[0].blockSize;this.canvas.width=n,this.canvas.height=o,this.camera.aspectRatio=n/o,this.depthTexture?.destroy(),this.depthTexture=this.createDepthTexture(),this.render()}).observe(this.canvas),this.initialised=!0}createDepthTexture(){return this.device.createTexture({label:"Renderer Depth Texture",size:[this.canvas.width,this.canvas.height],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT})}async initialiseRendering(){this.ctx.configure({device:this.device,format:this.canvasFormat});const e=await D.createCubemap(this.device,"Skybox Texture","skybox");this.skyboxRenderer=await N.create(this.device,this.canvasFormat,"Skybox Renderer"),this.skyboxRenderer.addSkybox(e);const t=await G.fetch(this.device,I("shaders/render.wgsl"));this.depthTexture=this.createDepthTexture();const s=this.device.createBindGroupLayout({label:"Render Bind Group Layout",entries:[{binding:0,buffer:{type:"uniform"},visibility:GPUShaderStage.VERTEX},{binding:1,buffer:{type:"read-only-storage"},visibility:GPUShaderStage.VERTEX},{binding:2,buffer:{type:"uniform",hasDynamicOffset:!0},visibility:GPUShaderStage.VERTEX},{binding:3,buffer:{type:"uniform"},visibility:GPUShaderStage.VERTEX},{binding:4,buffer:{type:"read-only-storage"},visibility:GPUShaderStage.VERTEX},{binding:5,buffer:{type:"read-only-storage"},visibility:GPUShaderStage.VERTEX},{binding:6,texture:{viewDimension:"cube"},visibility:GPUShaderStage.FRAGMENT},{binding:7,sampler:{},visibility:GPUShaderStage.FRAGMENT}]});this.renderBindGroup=this.device.createBindGroup({label:"Render Bind Group",layout:s,entries:[{binding:0,resource:{buffer:this.perspectiveViewMatrix.buffer}},{binding:1,resource:{buffer:this.scenes.sceneBuffer}},{binding:2,resource:{buffer:this.parametersBuffer,size:256}},{binding:3,resource:{buffer:this.board.ballPhysicsShader.settingsBuffer}},{binding:4,resource:{buffer:this.board.ballPhysicsShader.heightsBuffer}},{binding:5,resource:{buffer:this.board.ballPhysicsShader.ballsToDrawBuffer}},{binding:6,resource:e.texture.createView({dimension:"cube"})},{binding:7,resource:this.skyboxRenderer.sampler}]});const i=this.device.createPipelineLayout({label:"Renderer Render Pipeline Layout",bindGroupLayouts:[s]});this.renderPipeline=this.device.createRenderPipeline({label:"Renderer Render Pipeline",layout:i,vertex:{module:t.shader,buffers:[{arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}]},fragment:{module:t.shader,targets:[{format:this.canvasFormat}]},primitive:{cullMode:"front"},depthStencil:{format:"depth24plus",depthCompare:"less",depthWriteEnabled:!0}})}render(){this.perspectiveViewMatrix.copyFrom(this.camera.getPerspectiveViewMatrix()),this.perspectiveViewMatrix.writeBuffer(),this.renderToCanvas()}renderToCanvas(){const e=this.device.createCommandEncoder(),t=this.gpuTimer.beginRenderPass(e,{colorAttachments:[{view:this.ctx.getCurrentTexture().createView(),loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:this.depthTexture.createView(),depthLoadOp:"clear",depthStoreOp:"store",depthClearValue:1}});this.skyboxRenderer.render(t,this.camera),t.setPipeline(this.renderPipeline);for(let s=0;s<this.scenes.scenes.length;s++){const i=this.scenes.scenes[s];i.objectCount!==0&&(t.setBindGroup(0,this.renderBindGroup,[s*256]),i.mesh.bind(t),t.drawIndexedIndirect(i.drawArgs,0))}t.end(),this.device.queue.submit([e.finish()])}static async create(e,t){if(!("gpu"in navigator))throw new Error("WebGPU not supported");const s=await navigator.gpu.requestAdapter();if(s===null)throw new Error("Could not find suitable GPU Adapter. Maybe your browser doesn't support WebGPU?");const i=await s.requestDevice({requiredFeatures:F.requestFeatures(s,"timestamp-query")});if(i===null)throw new Error("Could not find suitable GPU Device. Maybe your browser doesn't support WebGPU?");return new F(e,t,i)}static requestFeatures(e,...t){return t.filter(s=>{const i=e.features.has(s);return i||console.warn(`GPU Feature ${s} not supported`),i})}}class ee{settings;callbacks=[];frameID;lastFrameTime;totalTime;frame;constructor(e={}){this.frameID=null,this.lastFrameTime=0,this.totalTime=0,this.frame=1,this.callbacks=[],this.settings={wormholeThreshold:e.wormholeThreshold??500}}start(){this.running||(this.frame=1,this.totalTime=0,this.lastFrameTime=-1,this.frameID=requestAnimationFrame(this.tick.bind(this)))}stop(){this.running&&(cancelAnimationFrame(this.frameID),this.frameID=null)}toggle(){this.running?this.stop():this.start()}addCallback(e){this.callbacks.push(e)}tick(e){this.lastFrameTime<0&&(this.lastFrameTime=e);const t=e-this.lastFrameTime,s=this.totalTime+t;if(t<this.settings.wormholeThreshold){const i={deltaTime:t,totalTime:s,frame:this.frame++};for(const n of this.callbacks)n(i);this.totalTime=s}this.lastFrameTime=e,this.frameID=requestAnimationFrame(this.tick.bind(this))}get running(){return this.frameID!==null}}function te(l){se()}function se(){const l=document.getElementById("chevron"),e=document.getElementById("content");if(l===null)throw new Error("Could not find chevron element");if(e===null)throw new Error("Could not find info panel");l.addEventListener("click",()=>{l.classList.toggle("collapsed"),e.classList.toggle("collapsed")})}function ie(l,e){return l+e-l%e}class L{static SETTINGS_BYTE_LENGTH=ie(32,16);settingsBuffer;heightsBuffer;ballsToDrawBuffer;device;board;gpuTimer;bindGroup;computePipeline;ballVelocitiesBuffer;constructor(e,t,s){this.device=t,this.board=s;const i=document.getElementById("computeFrameTime");this.gpuTimer=new $(t,a=>{const c=a/1e3,h=a/1e6,u=h>1,f=(u?h:c).toFixed(2)+(u?"ms":"μs");i.textContent=f}),this.settingsBuffer=t.createBuffer({label:"Ball Physics Shader Settings Buffer",size:L.SETTINGS_BYTE_LENGTH,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),this.heightsBuffer=t.createBuffer({label:"Heights Buffer",size:4*s.floorResolution*s.floorResolution,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),this.ballVelocitiesBuffer=t.createBuffer({label:"Ball Physics Shader Ball States Buffer",size:s.maxBallCount*4*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),this.ballsToDrawBuffer=t.createBuffer({label:"Balls to Draw",size:s.maxBallCount*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST});const n=t.createBindGroupLayout({label:"Ball Physics Shader Bind Group Layout",entries:[{binding:0,buffer:{type:"uniform"},visibility:GPUShaderStage.COMPUTE},{binding:1,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:2,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:3,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:4,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE},{binding:5,buffer:{type:"storage"},visibility:GPUShaderStage.COMPUTE}]});this.bindGroup=t.createBindGroup({label:"Ball Physics Shader Bind Group",layout:n,entries:[{binding:0,resource:{buffer:this.settingsBuffer}},{binding:1,resource:{buffer:s.spheres.scene.sceneBuffer}},{binding:2,resource:{buffer:this.ballVelocitiesBuffer}},{binding:3,resource:{buffer:this.heightsBuffer}},{binding:4,resource:{buffer:s.scene.scenes[0].drawArgs}},{binding:5,resource:{buffer:this.ballsToDrawBuffer}}]});const o=t.createPipelineLayout({label:"Ball Physics Shader Compute Pipeline Layout",bindGroupLayouts:[n]});this.computePipeline=t.createComputePipeline({label:"Ball Physics Shader Compute Pipeline",layout:o,compute:{module:e.shader}})}updateSettings(e){const t=new j(L.SETTINGS_BYTE_LENGTH);t.writeFloat32(e),t.writeUint32(this.board.pegCount),t.writeFloat32(this.board.pegRadius),t.writeFloat32(this.board.ballRadius),t.writeUint32(this.board.ballCount),t.writeFloat32(this.board.start.y-this.board.height-this.board.floorOffset+this.board.ballRadius+this.board.floorThickness),t.writeFloat32(this.board.floorResolution),t.writeFloat32(-this.board.height-this.board.pegRadius),this.device.queue.writeBuffer(this.settingsBuffer,0,t.buffer)}run(e){this.updateSettings(e),this.board.scene.scenes[0].updateDrawArgs(void 0,this.board.pegCount);const t=this.device.createCommandEncoder(),s=this.gpuTimer.beginComputePass(t,{label:"Ball Physics Shader Compute Pass"});s.setBindGroup(0,this.bindGroup),s.setPipeline(this.computePipeline),s.dispatchWorkgroups(Math.ceil(this.board.ballCount/64),1,1),s.end(),this.device.queue.submit([t.finish()])}static async create(e,t){const s=await G.fetch(e,I("shaders/ballPhysics.wgsl"));return new L(s,e,t)}}class V{position;scale;colour;constructor(e={}){this.position=e.position??new r,this.scale=e.scale??new r(1,1,1),this.colour=e.colour??new r(1,1,1)}calculateModelMatrix(){const e=new R;return e.components[0]*=this.scale.x,e.components[1]*=this.scale.x,e.components[2]*=this.scale.x,e.components[4]*=this.scale.y,e.components[5]*=this.scale.y,e.components[6]*=this.scale.y,e.components[8]*=this.scale.z,e.components[9]*=this.scale.z,e.components[10]*=this.scale.z,e.components[12]=this.position.x,e.components[13]=this.position.y,e.components[14]=this.position.z,e}}function ne(l,e,t){const s=e*t,i=l/60,n=s*(1-Math.abs(i%2-1));return i<1?new r(s,n,0):i<2?new r(n,s,0):i<3?new r(0,s,n):i<4?new r(0,n,s):i<5?new r(n,0,s):new r(s,0,n)}class oe{vertexBuffer;indexBuffer;device;vertices;indices;rawVertices;rawIndices;label;constructor(e,t,s=""){this.rawVertices=e,this.rawIndices=t??null,this.label=s}initialise(e){this.device=e,this.update(this.rawVertices,this.rawIndices??void 0,!0)}update(e,t,s=!1){if(this.device)if(this.vertices=new Float32Array(e.map(i=>[i.position.x,i.position.y,i.position.z,i.normal.x,i.normal.y,i.normal.z]).flat()),(e.length!==this.rawVertices.length||s)&&(this.vertexBuffer?.destroy(),this.vertexBuffer=this.device.createBuffer({label:`${this.label} Vertex Buffer`,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,size:this.vertices.byteLength})),this.device.queue.writeBuffer(this.vertexBuffer,0,this.vertices.buffer),t!==void 0){const i=this.indexFormat==="uint16"?Uint16Array:Uint32Array;this.indices=new i(t),(this.rawIndices?.length!==t.length||s)&&(this.indexBuffer?.destroy(),this.indexBuffer=this.device.createBuffer({label:`${this.label} Index Buffer`,usage:GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST,size:this.indices.byteLength})),this.device.queue.writeBuffer(this.indexBuffer,0,this.indices.buffer)}else this.indices=null,this.indexBuffer=null}render(e){this.indexBuffer!==null?e.drawIndexed(this.indexCount):e.draw(this.rawVertices.length)}bind(e,t=0){e.setVertexBuffer(t,this.vertexBuffer),this.indexBuffer!==null&&e.setIndexBuffer(this.indexBuffer,this.indexFormat)}get verticeCount(){return this.rawVertices.length}get indexCount(){return this.indices?.length??0}get indexFormat(){return this.vertices.length>65535?"uint32":"uint16"}}class z extends oe{constructor(e,t){const s=[],i=[],n=[new r(1,0,0),new r(-1,0,0),new r(0,1,0),new r(0,-1,0),new r(0,0,1),new r(0,0,-1)];for(let o=0;o<n.length;o++){const a=n[o],c=z.createCubeFace(a,o*(e+1)*(e+1),e,t);for(const h of c.vertices)s.push(h);for(const h of c.indices)i.push(h)}super(s,i)}static createCubeFace(e,t,s,i){const n=[],o=[],a=new r(e.y,e.z,e.x).scale(i),c=r.cross(e,a).normalise().scale(i),h=r.subtract(r.scale(e,.5*i),r.add(a,c).scale(.5)),u=r.scale(a,1/s),m=r.scale(c,1/s);for(let d=0;d<=s;d++)for(let f=0;f<=s;f++){const b=r.scale(u,d).add(r.scale(m,f)),p=r.add(h,b);if(n.push({position:p,normal:e}),d<s&&f<s){const B=t+d+f*(s+1);o.push(B,B+1,B+s+2,B,B+s+2,B+s+1)}}return{vertices:n,indices:o}}}class re extends z{constructor(e,t){super(e,t*2),this.rawVertices.forEach(s=>{s.position.normalise().scale(.5*t*2);const i=r.normalise(s.position);i.x*=Math.sqrt(1-.5*i.y*i.y-.5*i.z*i.z+i.y*i.y*i.z*i.z/3),i.y*=Math.sqrt(1-.5*i.x*i.x-.5*i.z*i.z+i.x*i.x*i.z*i.z/3),i.z*=Math.sqrt(1-.5*i.y*i.y-.5*i.x*i.x+i.y*i.y*i.x*i.x/3),s.normal=i.normalise()})}}class ae{scene;spheres;floor;maxBallCount;pegCount;ballRadius;pegRadius;floorResolution;floorOffset;floorThickness;height;start;sideLength;initialised;ballPhysicsShader;constructor(e={}){this.initialised=!1,this.maxBallCount=e.ballCount??100,this.pegRadius=e.pegRadius??4,this.ballRadius=e.ballRadius??1,this.floorResolution=e.floorResolution??256,this.floorOffset=e.floorOffset??this.pegRadius*5,this.floorThickness=e.floorThickness??1,this.sideLength=e.sideLength??100,this.height=e.height??50,this.start=e.start??new r(0,0,0);const t=this.createPegs(e.layers??5);this.pegCount=t.length,this.spheres=new M(new re(7,1)),this.floor=new M(new z(1,1)),this.spheres.addObjects(t);const s=this.createFloor();this.floor.addObjects(s),this.scene=new J(2,[this.pegCount+this.maxBallCount,this.floorResolution*this.floorResolution])}get ballCount(){return this.spheres.objectCount-this.pegCount}createPegs(e){const t=[],s=e===1?this.height:this.height/(e-1),i=this.sideLength/e;for(let n=0;n<e;n++){const o=this.start.y-n*s,a=(e-n)/2,c=r.add(this.start,new r(-this.sideLength/2,o,-this.sideLength/2)).add(new r(a*i,0,a*i)),h=ne(360*(n/e),1,1);for(let u=0;u<n+1;u++){const m=u*i;for(let d=0;d<n+1;d++){const f=d*i,b=r.add(c,new r(m,0,f));t.push(new V({position:b,scale:new r(this.pegRadius,this.pegRadius,this.pegRadius),colour:h}))}}}return t}createFloor(){const e=[],t=r.subtract(this.start,new r(this.floorResolution*.5,this.floorOffset+this.height,this.floorResolution*.5)),s=this.floorResolution/this.floorResolution,i=new r(1,1,1),n=new r(this.floorResolution/this.floorResolution,this.floorThickness,this.floorResolution/this.floorResolution);for(let o=0;o<this.floorResolution;o++)for(let a=0;a<this.floorResolution;a++)e.push(new V({position:new r(t.x+o*s+n.x*.5,t.y+n.y*.5,t.z+a*s+n.z*.5),colour:i,scale:n}));return e}*createBalls(e=1){const t=this.pegRadius*5,s=new r(this.ballRadius,this.ballRadius,this.ballRadius),i=new r(1,1,1);for(let n=0;n<this.maxBallCount;n++){const o=1*this.ballRadius*(Math.random()-.5),a=1*this.ballRadius*(Math.random()-.5);this.spheres.addObjects([new V({position:r.add(this.start,new r(o,t,a)),scale:s,colour:i})],n%e===e-1),this.spheres.updateBuffer(1),yield}}tick(e){this.initialised&&this.ballPhysicsShader.run(e)}async initialise(e){this.initialised||(this.scene.initialise(e),this.spheres.initialise(this.scene,e),this.floor.initialise(this.scene,e),this.ballPhysicsShader=await L.create(e,this),this.initialised=!0)}}async function ce(){const l=document.getElementById("message");l.style.zIndex="2";const e=document.getElementById("main"),t=new ae({ballCount:1e5,layers:9,pegRadius:4,floorResolution:320,floorOffset:70,sideLength:120}),s=await F.create(e,{scene:t.scene,cameraOptions:{mouseSensitivity:.1,movementSpeed:.1}});await t.initialise(s.device),await s.initialise(t),s.camera.position=new r(t.floorResolution*.35,10,t.floorResolution*.25),s.camera.fovDegrees=60,s.camera.lookAt(new r(0,-10*t.pegRadius,0)),te();const i=new ee({wormholeThreshold:100}),n=1,o=50,a=t.createBalls(o);let c=a.next();i.addCallback(h=>{if(!c.done&&h.frame%n===n-1)for(let u=0;u<o;u++)c=a.next();s.camera.checkKeyboardInputs(h.deltaTime),t.tick(h.deltaTime),s.render()}),i.start(),l.style.zIndex="unset",e.addEventListener("click",()=>{e.requestPointerLock()})}ce().catch(l=>{const e=l instanceof Error?l.message:JSON.stringify(l),t=document.querySelector("iframe"),s=document.getElementById("message");s.classList.add("error"),s.textContent=e,t.classList.remove("hidden"),t.src="https://www.youtube.com/embed/w5SLhNPOr2I";const i=document.getElementById("chevron"),n=document.getElementById("content");i?.classList.add("collapsed"),n?.classList.add("collapsed"),console.error(e)});
